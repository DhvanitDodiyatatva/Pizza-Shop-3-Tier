@model PizzaShopRepository.ViewModels.ItemVM

<div class="modal fade" id="exampleModal2" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Add New Menu Item</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addItemForm" asp-action="AddNewItem" asp-controller="Menu" method="post" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="row g-2 p-1">
                        <div class="col-xl-8 col-lg-12 col-md-12 col-12">
                            <div class="row">
                                <div class="col">
                                    <div class="form-floating mb-3">
                                        <select class="form-select" asp-for="CategoryId"
                                            asp-items="@(new SelectList(ViewBag.Categories, "Id", "Name"))" required>
                                            <option value="">Select Category</option>
                                        </select>
                                        <label asp-for="CategoryId">Categories*</label>
                                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="form-floating mb-3">
                                        <input type="text" class="form-control" asp-for="Name" placeholder="Item Name"
                                            required />
                                        <label asp-for="Name">Name*</label>
                                        <span asp-validation-for="Name" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 gy-2">
                                    <div class="form-floating">
                                        <select class="form-select" asp-for="ItemType" required>
                                            <option value="">Select Item Type</option>
                                            <option value="vegetarian">Veg</option>
                                            <option value="non_vegetarian">Non-Veg</option>
                                            <option value="vegan">Vegan</option>
                                        </select>
                                        <label asp-for="ItemType">Item Type*</label>
                                        <span asp-validation-for="ItemType" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 gy-2">
                                    <div class="form-floating mb-3">
                                        <input type="number" class="form-control" asp-for="Price" placeholder="Rate"
                                            step="0.01" required />
                                        <label asp-for="Price">Rate*</label>
                                        <span asp-validation-for="Price" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 gy-2">
                                    <div class="form-floating">
                                        <select class="form-select" asp-for="Unit" required>
                                            <option value="">Select a Unit</option>
                                            <option value="piece">Piece</option>
                                            <option value="plate">Plate</option>
                                            <option value="serving">Serving</option>
                                            <option value="bowl">Bowl</option>
                                            <option value="jar">Jar</option>
                                            <option value="pie">Pie</option>
                                            <option value="slice">Slice</option>
                                        </select>
                                        <label asp-for="Unit">Unit*</label>
                                        <span asp-validation-for="Unit" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 gy-2">
                                    <div class="form-floating mb-3">
                                        <input type="number" class="form-control" asp-for="Quantity"
                                            placeholder="Quantity" required />
                                        <label asp-for="Quantity">Quantity*</label>
                                        <span asp-validation-for="Quantity" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 gy-2">
                                    <div class="d-flex align-items-center">
                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" asp-for="IsAvailable"
                                                style="width: 50px; height: 30px;" checked />
                                            <label class="form-check-label" for="IsAvailable"></label>
                                        </div>
                                        <div>Available</div>
                                    </div>
                                </div>
                                <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 gy-2">
                                    <div class="d-flex align-items-center">
                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" asp-for="DefaultTax"
                                                style="width: 50px; height: 30px;" />
                                            <label class="form-check-label" for="DefaultTax"></label>
                                        </div>
                                        <div>DefaultTax</div>
                                    </div>
                                </div>
                                <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 gy-2">
                                    <div class="form-floating mb-3">
                                        <input type="number" class="form-control" asp-for="TaxPercentage"
                                            placeholder="Tax Percentage" step="0.01" />
                                        <label asp-for="TaxPercentage">Tax Percentage</label>
                                        <span asp-validation-for="TaxPercentage" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 gy-2">
                                    <div class="form-floating mb-3">
                                        <input type="text" class="form-control" asp-for="ShortCode"
                                            placeholder="Short Code" />
                                        <label asp-for="ShortCode">Short Code</label>
                                        <span asp-validation-for="ShortCode" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-floating">
                                    <textarea class="form-control" asp-for="Description" placeholder="Description"
                                        style="height: 100px"></textarea>
                                    <label asp-for="Description">Description</label>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row p-3">
                                <input type="file" class="d-none" id="file" asp-for="ImageFile" accept="image/*" />
                                    <div id="imagePreviewContainer" class="text-center"
                                        style="border: 2px dashed #d7d8da; height: 100px; display: flex; align-items: center; justify-content: center; position: relative;">
                                        <label for="file" id="uploadLabel"
                                            class="btn-outline-danger text-center d-flex justify-content-center align-items-center fs-5 rounded-3"
                                            style="width: 100%; height: 100%; cursor: pointer;">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor"
                                                class="bi bi-cloud-arrow-up" viewBox="0 0 16 16">
                                                <path fill-rule="evenodd"
                                                    d="M7.646 5.146a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 6.707V10.5a.5.5 0 0 1-1 0V6.707L6.354 7.854a.5.5 0 1 1-.708-.708z" />
                                                <path
                                                    d="M4.406 3.342A5.53 5.53 0 0 1 8 2c2.69 0 4.923 2 5.166 4.579C14.758 6.804 16 8.137 16 9.773 16 11.569 14.502 13 12.687 13H3.781C1.708 13 0 11.366 0 9.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383m.653.757c-.757.653-1.153 1.44-1.153 2.056v.448l-.445.049C2.064 6.805 1 7.952 1 9.318 1 10.785 2.23 12 3.781 12h8.906C13.98 12 15 10.988 15 9.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 4.825 10.328 3 8 3a4.53 4.53 0 0 0-2.941 1.1z" />
                                            </svg>
                                            Browse files
                                        </label>
                                        <img id="imagePreview" src="#" alt="Image Preview"
                                            style="display: none; max-height: 100%; max-width: 100%; object-fit: contain;" />
                                        <button type="button" id="deleteImage"
                                            style="display: none; position: absolute; top: 35px; right: 160px; background-color: transparent; color: black; border: none; border-radius: 50%; width: 20px; height: 20px; line-height: 20px; text-align: center; cursor: pointer;">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor"
                                                class="bi bi-trash3" viewBox="0 0 16 16">
                                                <path
                                                    d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 0 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                                            </svg></button>
                                    </div>
                                    <span asp-validation-for="ImageFile" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-4 col-lg-12 col-md-12 col-12">
                            <div class="card h-100 bg-warning-subtle p-3">
                                <div class="custom-scrollbar" style="overflow-y: auto; max-height: 450px; min-height: 450px; overflow-x: hidden;">
                                    <h5>Select Modifier Group(s)</h5>
                                    <div class="dropdown">
                                        <button class="btn bg-white dropdown-toggle w-100" type="button"
                                            id="modifierGroupDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                            Select Modifier Groups
                                        </button>
                                        <ul class="dropdown-menu w-100" aria-labelledby="modifierGroupDropdown">
                                            @foreach (var group in ViewBag.ModifierGroups as List<PizzaShopRepository.Models.ModifierGroup>)
                                            {
                                                <li>
                                                    <div class="dropdown-item">
                                                        <input type="checkbox" class="modifier-group-checkbox" value="@group.Id"
                                                            name="SelectedModifierGroupIds" id="modifierGroup_@group.Id" />
                                                        <label for="modifierGroup_@group.Id">@group.Name</label>
                                                    </div>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                    <div id="selectedModifierGroups" class="mt-3">
                                        <!-- Selected modifier groups will be displayed here -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-main text-white">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script>
    $(document).ready(function () {
        // Initialize unobtrusive validation
        $.validator.unobtrusive.parse("#addItemForm");

        // Ensure form validation is enforced
        $("#addItemForm").validate({
            ignore: [], // Ensure all fields are validated, including hidden ones
            errorElement: "span",
            errorClass: "text-danger",
            highlight: function (element) {
                $(element).addClass("is-invalid");
            },
            unhighlight: function (element) {
                $(element).removeClass("is-invalid");
            },
            errorPlacement: function (error, element) {
                error.insertAfter(element.closest(".form-floating"));
            }
        });

        // Handle modifier group selection
        $('.modifier-group-checkbox').on('change', function () {
            updateSelectedModifierGroups();
        });

         function updateSelectedModifierGroups() {
                var selectedGroups = [];
                $('.modifier-group-checkbox:checked').each(function () {
                    var groupId = $(this).val();
                    var groupName = $(this).next('label').text();
                    selectedGroups.push({ id: groupId, name: groupName });
                });

                    var html = '';
                    selectedGroups.forEach(function (group, index) { // Use index instead of group.id
                        html += `
                        <div class="modifier-group-item mb-3" data-group-id="${group.id}">
                            <p class="fs-5 text-secondary fw-bolder">${group.name}</p>
                            <div class="row">
                                <div class="col-6">
                                    <label>Min Modifiers</label>
                                    <select class="form-select min-load" name="ModifierGroupConfigs[${index}].MinLoad">
                                        ${generateOptions(0, 10)}
                                    </select>
                                    <input type="hidden" name="ModifierGroupConfigs[${index}].ModifierGroupId" value="${group.id}" />
                                </div>
                                <div class="col-6">
                                    <label>Max Modifiers</label>
                                    <select class="form-select max-load" name="ModifierGroupConfigs[${index}].MaxLoad">
                                        ${generateOptions(0, 10)}
                                    </select>
                                </div>
                            </div>
                            <div class="modifiers-list mt-2">
                                <!-- Modifiers will be loaded via AJAX -->
                            </div>
                        </div>`;
                    });

                    $('#selectedModifierGroups').html(html);
                    // Load modifiers for each selected group
                    selectedGroups.forEach(function (group) {
                        loadModifiers(group.id);
                    });
                    // Enforce Min <= Max rule
                    enforceMinMaxRule();
            }

        function generateOptions(start, end, selectedValue = null) {
            let options = '';
            for (let i = start; i <= end; i++) {
                let selected = i == selectedValue ? 'selected' : '';
                options += `<option value="${i}" ${selected}>${i}</option>`;
            }
            return options;
        }

        function loadModifiers(groupId) {
            $.ajax({
                url: '@Url.Action("GetModifiersByGroupForItem", "Menu")',
                type: 'GET',
                data: { modifierGroupId: groupId },
                success: function (result) {
                    if (!Array.isArray(result) || result.length === 0) {
                        $(`.modifier-group-item[data-group-id="${groupId}"] .modifiers-list`).html('<p>No modifiers available for this group.</p>');
                        updateMinMaxOptions(groupId, 0);
                        return;
                    }

                    const modifierCount = result.length;
                    updateMinMaxOptions(groupId, modifierCount);

                    var modifiersHtml = '<ul>';
                    result.forEach(function (modifier) {
                        var modifierName = modifier.name || 'Unknown Modifier';
                        var modifierPrice = modifier.price !== undefined ? modifier.price : 'N/A';
                        modifiersHtml += `<li>${modifierName} - ₹${modifierPrice}</li>`;
                    });
                    modifiersHtml += '</ul>';
                    $(`.modifier-group-item[data-group-id="${groupId}"] .modifiers-list`).html(modifiersHtml);
                },
                error: function (xhr, status, error) {
                    $(`.modifier-group-item[data-group-id="${groupId}"] .modifiers-list`).html('<p>Failed to load modifiers. Please try again.</p>');
                    updateMinMaxOptions(groupId, 0);
                }
            });
        }

        function updateMinMaxOptions(groupId, modifierCount) {
            const $minSelect = $(`.modifier-group-item[data-group-id="${groupId}"] .min-load`);
            const $maxSelect = $(`.modifier-group-item[data-group-id="${groupId}"] .max-load`);
            const currentMin = $minSelect.val() ? parseInt($minSelect.val()) : null;
            const currentMax = $maxSelect.val() ? parseInt($maxSelect.val()) : null;

            let minOptions = '<option value="">Select</option>';
            let maxOptions = '<option value="">Select</option>';

            if (modifierCount === 0) {
                minOptions += '<option value="0" selected>0</option>';
                maxOptions += '<option value="0" selected>0</option>';
            } else {
                minOptions += generateOptions(0, modifierCount, currentMin);
                maxOptions += generateOptions(0, modifierCount, currentMax);
            }

            $minSelect.html(minOptions);
            $maxSelect.html(maxOptions);

            if (currentMin !== null && currentMin > modifierCount) {
                $minSelect.val(modifierCount);
            }
            if (currentMax !== null && currentMax > modifierCount) {
                $maxSelect.val(modifierCount);
            }

            enforceMinMaxForGroup(groupId);
        }

        function enforceMinMaxRule() {
            $('.min-load').off('change').on('change', function () {
                const $minSelect = $(this);
                const groupId = $minSelect.closest('.modifier-group-item').data('group-id');
                enforceMinMaxForGroup(groupId);
            });

            $('.max-load').off('change').on('change', function () {
                const $maxSelect = $(this);
                const groupId = $maxSelect.closest('.modifier-group-item').data('group-id');
                enforceMinMaxForGroup(groupId);
            });
        }

        function enforceMinMaxForGroup(groupId) {
            const $minSelect = $(`.modifier-group-item[data-group-id="${groupId}"] .min-load`);
            const $maxSelect = $(`.modifier-group-item[data-group-id="${groupId}"] .max-load`);

            const minValue = $minSelect.val() ? parseInt($minSelect.val()) : null;
            const maxValue = $maxSelect.val() ? parseInt($maxSelect.val()) : null;

            const maxPossibleValue = parseInt($minSelect.find('option:last').val());

            if (minValue === maxPossibleValue) {
                $maxSelect.val(minValue);
                return;
            }

            if (minValue !== null && maxValue !== null) {
                if (minValue > maxValue) {
                    $maxSelect.val(minValue);
                }
            }
        }

        // Form submission handler
        $("#addItemForm").on("submit", function (e) {
            e.preventDefault();

            // Check if the form is valid
            if (!$(this).valid()) {
                toastr.error("Please fill all required fields correctly.");
                return;
            }

            var formData = new FormData(this);
            $.ajax({
                url: '@Url.Action("AddNewItem", "Menu")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        var modal = bootstrap.Modal.getInstance(document.getElementById("exampleModal2"));
                        modal.hide();
                        toastr.success("Item added successfully!");
                        var categoryId = $(".category-link.active").data("category-id") || $("#CategoryId").val();
                        loadItems(categoryId);
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function (xhr) {
                    toastr.error("Error adding item: " + (xhr.responseText || "Please try again."));
                }
            });
        });

        function loadItems(categoryId) {
            $.ajax({
                url: '@Url.Action("GetItems", "Menu")',
                type: 'GET',
                data: { categoryId: categoryId },
                success: function (result) {
                    $("#GetItemList").html(result);
                },
                error: function (xhr, status, error) {
                    console.error("Error loading items:", error);
                    $("#GetItemList").html("Failed to load items");
                }
            });
        }

        // Image preview and delete functionality
        const fileInput = document.getElementById("file");
        const imagePreview = document.getElementById("imagePreview");
        const uploadLabel = document.getElementById("uploadLabel");
        const deleteImageButton = document.getElementById("deleteImage");

        fileInput.addEventListener("change", function () {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = "block";
                    uploadLabel.style.display = "none";
                    deleteImageButton.style.display = "block";
                };
                reader.readAsDataURL(file);
            }
        });

        deleteImageButton.addEventListener("click", function () {
            fileInput.value = "";
            imagePreview.src = "";
            imagePreview.style.display = "none";
            uploadLabel.style.display = "flex";
            deleteImageButton.style.display = "none";
        });
    });
</script>