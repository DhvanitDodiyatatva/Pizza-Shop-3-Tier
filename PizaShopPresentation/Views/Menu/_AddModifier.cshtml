@model PizzaShopRepository.ViewModels.ModifierViewModel

<div class="modal fade" id="addModifierModal" tabindex="-1" aria-labelledby="addModifierModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="addModifierModalLabel">Add New Modifier</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addModifierForm">
                    @Html.AntiForgeryToken()
                    <div class="row g-2 p-1">
                        <div class="col-md-6">
                            <div class="form-floating">
                                <div class="dropdown">
                                    <button
                                        class="btn dropdown-toggle border-secondary-subtle h-100 w-100 py-3 text-start"
                                        type="button" id="multiSelectDropdown" data-bs-toggle="dropdown"
                                        aria-expanded="false">
                                        Select Modifier Group(s)
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="multiSelectDropdown">
                                        @foreach (var group in ViewBag.ModifierGroups)
                                        {
                                            <li>
                                                <label>
                                                    <input type="checkbox" name="ModifierGroupIds" value="@group.Id">
                                                    @group.Name
                                                </label>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="Name" name="Name" value="@Model.Name" asp-for="Name"
                                    placeholder="Name" >
                                <label for="Name">Name*</label>
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-floating">
                                <input type="number" step="0.01" class="form-control" id="Price" name="Price"
                                    value="@Model.Price" placeholder="Rate" asp-for="Price">
                                <label for="Price">Rate*</label>
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-floating">
                                <input type="number" class="form-control" id="Quantity" name="Quantity"
                                    value="@Model.Quantity" placeholder="Quantity" asp-for="Quantity">
                                <label for="Quantity">Quantity*</label>
                                <span asp-validation-for="Quantity" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-floating">
                                <select class="form-select" id="Unit" name="Unit">
                                    <option value="grams" selected="@(Model.Unit == "grams")">Grams</option>
                                    <option value="pieces" selected="@(Model.Unit == "pieces")">Pieces</option>
                                </select>
                                <label for="Unit">Unit</label>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="Description" name="Description"
                                    value="@Model.Description" placeholder="Description">
                                <label for="Description">Description</label>
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="submit" form="addModifierForm" class="btn btn-main text-white">Save</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

<script>
     const chBoxes =
        document.querySelectorAll('.dropdown-menu input[type="checkbox"]');
    const dpBtn =
        document.getElementById('multiSelectDropdown');
    let mySelectedListItems = [];

    function handleCB() {
        mySelectedListItems = [];
        let mySelectedListItemsText = '';

        chBoxes.forEach((checkbox) => {
            if (checkbox.checked) {
                mySelectedListItems.push(checkbox.value);
                mySelectedListItemsText += checkbox.value + ', ';
            }
        });

        dpBtn.innerText =
            mySelectedListItems.length > 0
                ? mySelectedListItemsText.slice(0, -2) : 'Select';
    }

    chBoxes.forEach((checkbox) => {
        checkbox.addEventListener('change', handleCB);
    }); 
</script>