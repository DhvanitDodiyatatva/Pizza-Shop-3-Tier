@{
    ViewData["Title"] = "Menu";
    Layout = "~/Views/Shared/_LayoutOrdApp.cshtml";
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"
    crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">

<style>
    .sidebar {
        background-color: #fff;
        padding: 15px;
        border-right: 1px solid #ddd;
        height: 100%;
        margin-left: 0px !important;
    }

    .sidebar h5 {
        font-size: 16px;
        margin-bottom: 10px;
        color: #333;
    }

    .list-group-item {
        border: none;
        padding: 8px 15px;
        background: none;
    }

    .list-group-item.active {
        background-color: #1f73ae;
        color: #fff;
        border-radius: 10px 50px 50px 10px;
    }

    .list-group-item a {
        color: #333;
        text-decoration: none;
    }

    .list-group-item.active a {
        color: #fff;
    }

    .main-content {
        padding: 15px;
        height: 100%;
    }

    .search-bar {
        padding: 10px;
        margin-bottom: 15px;
    }

    .search-bar input {
        border: none;
        background: #fff;
        padding: 5px 10px;
        border-radius: 5px;
    }

    .search-bar button {
        border: none;
        background: none;
        cursor: pointer;
    }

    .badge {
        width: 25px;
        height: 25px;
        border-radius: 0px 5px 0px 200px;
        padding: 0;
    }

    .item-card {
        display: inline-block;
        width: 18rem;
        height: 60px;
        margin: 10px;
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        text-align: center;
        position: relative;
        padding: 10px;
        border: 1px solid #ddd;
    }

    .item-card .card-title {
        font-size: 14px;
        margin: 0;
        color: #333;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .item-card .card-text {
        font-size: 12px;
        color: #666;
        margin: 5px 0;
    }

    .heart {
        position: absolute !important;
        bottom: -5px !important;
        right: 0px !important;
        font-size: 18px;
        color: #ccc;
        cursor: pointer;
    }

    .heart:hover {
        color: #1f73ae;
    }
</style>

<div class="container-fluid p-0">
    <div class="row m-0 p-0">
        <!-- Category List Container -->
        <div class="col-md-2 p-0">
            <div style="overflow: auto; height: 100%;" class="custom-scrollbar" id="categoryContainer">
                <!-- Categories loaded here via AJAX -->
            </div>
        </div>

        @{
            var urlParams = new System.Collections.Specialized.NameValueCollection();
            if (Context.Request.QueryString.HasValue)
            {
                urlParams = System.Web.HttpUtility.ParseQueryString(Context.Request.QueryString.Value);
            }
            var orderId = urlParams["orderId"];
        }

        @if (string.IsNullOrEmpty(orderId))
        {
            <!-- No OrderId: Show only Item List Container -->
            <div class="col-md-10 p-0">
                <div style="overflow: auto; height: 91dvh;" class="custom-scrollbar" id="itemListContainer">
                    <!-- Items loaded here via AJAX -->
                </div>
            </div>
        }
        else
        {
            <!-- OrderId Present: Show Item List and Cart Containers -->
            <div class="col-md-5 p-0">
                <div style="overflow: auto; height: 91dvh;" class="custom-scrollbar" id="itemListContainer">
                    <!-- Items loaded here via AJAX -->
                </div>
            </div>
            <div class="col-md-5 p-0">
                <div id="cartContainer" class="custom-scrollbar" style="overflow: auto; height: 91dvh;">
                    <!-- Cart partial view loaded here via AJAX -->
                </div>
            </div>
        }
    </div>


</div>
<!-- Customer Details Modal -->
<div class="modal fade" id="customerDetailsModal" tabindex="-1" aria-labelledby="customerDetailsModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div id="customerDetailsModalContent">
            <!-- Modal content will be loaded via AJAX -->
        </div>
    </div>
</div>

<script>
    let currentCategory = 'All'; // Track the current category

    function loadCategories() {
        $.ajax({
            url: '@Url.Action("GetCategories", "OrderApp")',
            type: 'GET',
            success: function (result) {
                $("#categoryContainer").html(result);
                $(".category-link").on("click", function (e) {
                    e.preventDefault();
                    $(".list-group-item").removeClass("active");
                    $(this).closest(".list-group-item").addClass("active");
                    currentCategory = $(this).data("category-name") || 'All';
                    loadItems(currentCategory, '');
                });
            },
            error: function (xhr, status, error) {
                console.error("Error loading categories:", error);
            }
        });
    }

    function loadItems(category, search) {
        $.ajax({
            url: '@Url.Action("GetItems", "OrderApp")',
            type: 'GET',
            data: {
                category: category || 'All',
                search: search || ''
            },
            success: function (result) {
                $("#itemListContainer").html(result);
            },
            error: function (xhr, status, error) {
                console.error("Error loading items:", error);
            }
        });
    }

    function loadCart(orderId) {
        if (!orderId) {
            $("#cartContainer").html(''); // Clear cart if no orderId
            return;
        }

        $.ajax({
            url: '@Url.Action("GetCartPartial", "OrderApp")',
            type: 'GET',
            data: { orderId: orderId },
            success: function (result) {
                $("#cartContainer").html(result);
                // Reinitialize any JavaScript-dependent components in the partial view
                initializeCartInteractions();
            },
            error: function (xhr, status, error) {
                console.error("Error loading cart:", error);
                $("#cartContainer").html('<p>Error loading cart. Please try again.</p>');
            }
        });
    }

    function initializeCartInteractions() {
        // Add event listeners for quantity buttons, delete buttons, etc.
        $('.quantity-selector .plus').on('click', function () {
            var globalId = $(this).data('globalid');
            var item = window.cartItems.find(ci => ci.GlobalId === globalId);
            if (item) {
                item.Quantity += 1;
                item.TotalPrice = item.ItemPrice * item.Quantity;
                updateCartDisplay(); // Assuming this function exists in the partial view
            }
        });

        $('.quantity-selector .minus').on('click', function () {
            var globalId = $(this).data('globalid');
            var item = window.cartItems.find(ci => ci.GlobalId === globalId);
            if (item) {
                if (item.Quantity - 1 < item.ReadyQuantity) {
                    toastr.error(`You cannot decrease this item's quantity because ${item.ReadyQuantity} item(s) are already prepared.`);
                    return;
                }
                if (item.Quantity > 1) {
                    item.Quantity -= 1;
                    item.TotalPrice = item.ItemPrice * item.Quantity;
                    updateCartDisplay();
                }
            }
        });

        $('.delete-item').on('click', function () {
            var globalId = $(this).data('globalid');
            var item = window.cartItems.find(ci => ci.GlobalId === globalId);
            if (item) {
                if (item.ReadyQuantity > 0) {
                    toastr.error(`You cannot delete this item because ${item.ReadyQuantity} item(s) are already prepared.`);
                    return;
                }
                window.cartItems = window.cartItems.filter(ci => ci.GlobalId !== globalId);
                updateCartDisplay();
            }
        });

        // Open Customer Details Modal
        $('#customerDetailsButton').on('click', function () {
            const urlParams = new URLSearchParams(window.location.search);
            const orderId = urlParams.get('orderId');
            if (!orderId) {
                toastr.error('Order ID is missing.');
                return;
            }

            $.ajax({
                url: '@Url.Action("ShowCustomerDetailsModal", "OrderApp")',
                type: 'GET',
                data: { orderId: orderId },
                success: function (result) {
                    $('#customerDetailsModalContent').html(result);
                    $('#customerDetailsModal').modal('show');
                },
                error: function (xhr) {
                    let errorMessage = 'Failed to load customer details. Please try again.';
                    try {
                        const errorResponse = JSON.parse(xhr.responseText);
                        if (errorResponse && errorResponse.message) {
                            errorMessage = errorResponse.message;
                        }
                    } catch (e) { }
                    toastr.error(errorMessage);
                }
            });
        });

        // Save Customer Details
        $(document).on('click', '#saveCustomerDetailsButton', function () {
            const $form = $('#customerDetailsForm');

            // Validate the form
            if (!$form.valid()) {
                return;
            }

            const formData = {
                Id: $form.find('input[name="Id"]').val(),
                Name: $form.find('input[name="Name"]').val(),
                Email: $form.find('input[name="Email"]').val(),
                PhoneNo: $form.find('input[name="PhoneNo"]').val(),
                NoOfPersons: parseInt($form.find('input[name="NoOfPersons"]').val())
            };

            $.ajax({
                url: '@Url.Action("UpdateCustomerDetails", "OrderApp")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                dataType: 'json',
                success: function (result) {
                    if (result.success) {
                        toastr.success(result.message || 'Customer details updated successfully.');
                        $('#customerDetailsModal').modal('hide');
                    } else {
                        toastr.error(result.message || 'Failed to update customer details.');
                    }
                },
                error: function (xhr) {
                    let errorMessage = 'Failed to update customer details. Please try again.';
                    try {
                        const errorResponse = JSON.parse(xhr.responseText);
                        if (errorResponse && errorResponse.message) {
                            errorMessage = errorResponse.message;
                        }
                    } catch (e) { }
                    toastr.error(errorMessage);
                }
            });
        });
    }

    $(document).ready(function () {
        loadCategories();
        loadItems('All', '');

        // Handle dynamic search
        $(document).on("input", "#searchInput", function () {
            const searchTerm = $(this).val();
            loadItems(currentCategory, searchTerm);
        });

        // Check URL for orderId and load cart if present
        const urlParams = new URLSearchParams(window.location.search);
        const orderId = urlParams.get('orderId');
        if (orderId) {
            loadCart(orderId);
        }

        toastr.options = {
            "positionClass": "toast-top-right",
            "progressBar": true,
            "timeOut": "5000"
        };
        @if (TempData["SuccessMessage"] != null)
            {
                <text>toastr.success('@TempData["SuccessMessage"]');</text>
        }
            @if (TempData["ErrorMessage"] != null)
            {
                <text>toastr.error('@TempData["ErrorMessage"]');</text>
        }
    });
</script>