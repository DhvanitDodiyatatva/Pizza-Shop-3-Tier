@model List<PizzaShopRepository.Models.Item>

<div class="main-content">
    <!-- Search Bar -->
    <div class="search-bar">
        <div class="row align-items-center">
            <div class="col-12 col-md-6 col-lg-4 mb-3 mb-md-0">
                <form method="get" action="javascript:void(0)" onsubmit="return false;">
                    <div class="input-group shadow-lg">
                        <input type="text" name="search" id="searchInput" class="form-control" placeholder="Search"
                               value="@ViewBag.SearchTerm">
                        <button class="btn btn-outline-secondary" type="submit">
                            <span class="bi bi-search"></span>
                        </button>
                    </div>
                </form>
            </div>
            <div class="col-12 col-md-6 col-lg-8">
                <div class="row">
                    <div class="col d-flex justify-content-end">
                        <div class="item-type"><span class="text-success mx-1 fs-3">●</span>Vegetarian</div>
                        <div class="item-type"><span class="text-danger mx-1 fs-3">●</span>Non-Vegetarian</div>
                        <div class="item-type"><span class="text-warning mx-1 fs-3">●</span>Vegan</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Item Cards -->
    <div class="row custom-scrollbar"
         style="max-height: 80%; min-height: 250px; overflow-y: auto; overflow-x: hidden;">
        @if (Model.Any())
        {
            foreach (var item in Model)
            {
                <div class="item-card" data-item-id="@item.Id" style="cursor: pointer;">
                    <div class="row">
                        <div class="col-3">
                            <div class="card-icon d-flex justify-content-center align-items-center">
                                <span>
                                    <img src="@(string.IsNullOrEmpty(item.ImageUrl) ? "/images/dining-menu.png" : item.ImageUrl)"
                                         class="rounded-circle" style="height: 40px; width: 40px">
                                </span>
                            </div>
                        </div>
                        <div class="col-9">
                            <div class="card-content">
                                <h5 class="card-title text-start">@item.Name</h5>
                                <p class="card-text text-start">₹@item.Price</p>
                            </div>

                            <!-- Item Type Badge -->
                            @if (item.ItemType == "vegetarian")
                            {
                                <span class="badge bg-success position-absolute top-0 end-0 m-0"> </span>
                            }
                            else if (item.ItemType == "vegan")
                            {
                                <span class="badge bg-warning position-absolute top-0 end-0 m-0"> </span>
                            }
                            else if (item.ItemType == "non_vegetarian")
                            {
                                <span class="badge bg-danger position-absolute top-0 end-0 m-0"> </span>
                            }

                            <!-- Heart Icon -->
                            <span class="heart position-absolute fs-4 bottom-0 end-0 m-2 @(item.IsFavourite ? "text-primary" : "text-secondary")"
                                  style="cursor: pointer;" onclick="toggleFavorite(@item.Id, this); event.stopPropagation();">♥</span>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-muted">No items found.</p>
        }
    </div>
</div>

<script>
    function toggleFavorite(itemId, element) {
        $.ajax({
            url: '@Url.Action("ToggleFavorite", "OrderApp")',
            type: 'POST',
            data: { itemId: itemId },
            success: function (result) {
                if (result.success) {
                    $(element).toggleClass('text-primary', result.isFavourite);
                    $(element).toggleClass('text-secondary', !result.isFavourite);
                    if (currentCategory === 'Favorite Items') {
                        loadItems('Favorite Items', '');
                    }
                } else {
                    alert(result.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error toggling favorite:", error);
                alert("Failed to update favorite status.");
            }
        });
    }

    $(document).ready(function () {
        $(document).on('click', '.item-card', function () {
            const itemId = $(this).data('item-id');
            $.ajax({
                url: '@Url.Action("ShowItemModifiersModal", "OrderApp")',
                type: 'GET',
                data: { itemId: itemId },
                success: function (result) {
                    // Ensure modal container exists
                    if (!$('#itemModifiersModal').length) {
                        $('body').append(`
                            <div class="modal fade" id="itemModifiersModal" tabindex="-1" aria-labelledby="itemModifiersModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content" id="itemModifiersModalContent"></div>
                                </div>
                            </div>
                        `);
                    }
                    $('#itemModifiersModalContent').html(result);
                    $('#itemModifiersModal').modal('show');
                },
                error: function (xhr, status, error) {
                    console.error("Error loading item modifiers:", error);
                    alert("Failed to load item modifiers.");
                }
            });
        });
    });
</script>