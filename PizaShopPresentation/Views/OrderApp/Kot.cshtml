@{
    ViewData["Title"] = "Kitchen Order Tickets";
    Layout = "~/Views/Shared/_LayoutOrdApp.cshtml";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"
    crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>

<div class="Users-content mt-0 p-xl-5 p-lg-4 p-md-4 p-sm-4 p-4">
    <div class="d-flex align-items-center justify-content-start my-2">
        <div>
            <div class="fw-bolder fs-2 page-text">KOT</div>
        </div>
    </div>

    <div class="row mb-3 upper-div rounded-2 shadow py-3 d-flex">
        <ul class="nav nav-underline" id="categoryTabs">
            <li class="nav-item">
                <a class="nav-link custom-tag mx-3 active" data-category="All" role="tab">
                    All
                </a>
            </li>
            @foreach (var category in ViewBag.Categories)
            {
                <li class="nav-item">
                    <a class="nav-link custom-tag mx-3 text-decoration-none text-black" data-category="@category.Name"
                        role="tab">
                        @category.Name
                    </a>
                </li>
            }
        </ul>
    </div>

    <div class="row content-div rounded-2 shadow position-relative overflow-hidden">
        <div class="tab-content w-100">
            <div class="row">
                <div class="col-md-12 mb-3 d-flex justify-content-end">
                    <button id="in-progress-btn" class="btn status-btn me-2 active text-nowrap">In Progress</button>
                    <button id="ready-btn" class="btn status-btn me-2">Ready</button>
                    <button class="btn btn-main text-white me-2">
                        < </button>
                            <button class="btn btn-main text-white"> > </button>
                </div>
                <div class="col-md-12">
                    <div id="kot-in-progress" class="row overflow-hidden position-relative"></div>
                </div>
                <div class="col-md-12">
                    <div id="kot-ready" class="row overflow-hidden position-relative"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let currentSlide = 0;
    const cardsToShow = 1;
    const cardWidth = 370;
    let selectedCategory = "All";
    let selectedStatus = 'in_progress';

    // Initialize SignalR connection
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/kotHub", {
            accessTokenFactory: () => {
                return document.cookie.split('; ').find(row => row.startsWith('JWT='))?.split('=')[1];
            }
        })
        .configureLogging(signalR.LogLevel.Information)
        .withAutomaticReconnect()
        .build();

    // Handle SignalR connection events
    connection.on("ReceiveOrderUpdate", function (orderId) {
        console.log(`Order updated: ${orderId}`);
        toastr.info(`Order #${orderId} has been updated.`);
        loadKotData(selectedCategory, selectedStatus);
    });

    connection.on("ReceiveOrderStatusUpdate", function (orderId, newStatus) {
        console.log(`Order ${orderId} status changed to: ${newStatus}`);
        @* toastr.info(`Order #${orderId} status changed to ${newStatus}.`); *@
        loadKotData(selectedCategory, selectedStatus);
    });

    connection.onreconnecting((error) => {
        console.log(`Connection lost due to error "${error}". Reconnecting.`);
        toastr.warning("Connection lost. Reconnecting...");
    });

    connection.onreconnected(() => {
        console.log("Reconnected to SignalR hub.");
        toastr.success("Reconnected to the server.");
        loadKotData(selectedCategory, selectedStatus);
    });

    connection.start().then(function () {
        console.log("SignalR connected.");
    }).catch(function (err) {
        console.error("SignalR connection error: ", err.toString());
        toastr.error("Failed to connect to real-time updates.");
    });

    function updateSliderWidth() {
        const container = document.querySelector('#kot-in-progress, #kot-ready:not(:empty)');
        if (!container) return;
        const cardWrapper = container.querySelector('.card-slider');
        if (!cardWrapper) return;

        const totalCards = cardWrapper.children.length;
        cardWrapper.style.width = `${totalCards * cardWidth}px`;
    }

    function nextslide() {
        const container = document.querySelector('#kot-in-progress, #kot-ready:not(:empty)');
        const cardWrapper = container?.querySelector('.card-slider');
        const totalCards = cardWrapper?.children.length ?? 0;
        const maxSlide = totalCards - cardsToShow;

        if (currentSlide < maxSlide) {
            currentSlide += cardsToShow;
            const offset = -currentSlide * cardWidth;
            cardWrapper.style.transform = `translateX(${offset}px)`;
        }
    }

    function backslide() {
        const container = document.querySelector('#kot-in-progress, #kot-ready:not(:empty)');
        const cardWrapper = container?.querySelector('.card-slider');

        if (currentSlide > 0) {
            currentSlide -= cardsToShow;
            const offset = -currentSlide * cardWidth;
            cardWrapper.style.transform = `translateX(${offset}px)`;
        }
    }

    document.querySelectorAll('.btn-main').forEach(btn => {
        btn.addEventListener('click', function () {
            if (this.textContent.trim() === ">") nextslide();
            if (this.textContent.trim() === "<") backslide();
        });
    });

    function loadKotData(category, status) {
        selectedCategory = category;
        selectedStatus = status;
        $.ajax({
            url: `/OrderApp/GetKotByCategoryAndStatus`,
            data: { category: category, status: status },
            success: function (data) {
                $('#kot-in-progress').html(status === 'in_progress' ? data : '');
                $('#kot-ready').html(status === 'ready' ? data : '');
                currentSlide = 0; // Reset slide position
                updateSliderWidth();
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", error);
                toastr.error("Failed to load KOT data.");
            }
        });
    }

    function loadKotDetails(orderId, status) {
        console.log("Loading modal for orderId:", orderId, "status:", status, "selectedCategory:", selectedCategory, "selectedStatus:", selectedStatus);

        $('div[id="kotDetailsModal"]').remove();

        $('.modal').modal('hide');
        $.ajax({
            url: `/OrderApp/ShowKotDetailsModal`,
            data: { orderId: orderId, status: status, selectedCategory: selectedCategory, selectedStatus: selectedStatus },
            success: function (data) {
                $('body').append(data);
                var modalElement = document.getElementById('kotDetailsModal');
                if (modalElement) {
                    var modal = new bootstrap.Modal(modalElement, { backdrop: 'static', keyboard: false });
                    modal.show();
                    modalElement.addEventListener('hidden.bs.modal', function () {
                        $(this).remove();
                    });
                } else {
                    console.error("Modal element not found after append");
                }
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", error, "Status:", status, "Response:", xhr.responseText);
                toastr.error("Failed to load KOT details.");
            }
        });
    }

    function updateTimeSinceOrder() {
        document.querySelectorAll(".time-since-order").forEach(function (element) {
            const createdAt = element.dataset.createdat;
            if (!createdAt) {
                element.innerText = "N/A";
                return;
            }

            const createdDate = new Date(createdAt);
            const now = new Date();
            let diff = Math.floor((now - createdDate) / 1000);

            const days = Math.floor(diff / (60 * 60 * 24));
            diff %= (60 * 60 * 24);
            const hours = Math.floor(diff / (60 * 60));
            diff %= (60 * 60);
            const minutes = Math.floor(diff / 60);
            const seconds = diff % 60;

            let parts = [];
            if (days > 0) parts.push(`${days} day${days !== 1 ? 's' : ''}`);
            if (hours > 0 || days > 0) parts.push(`${hours} hour${hours !== 1 ? 's' : ''}`);
            if (minutes > 0 || hours > 0 || days > 0) parts.push(`${minutes} min${minutes !== 1 ? 's' : ''}`);
            parts.push(`${seconds} sec${seconds !== 1 ? 's' : ''}`);

            element.innerText = parts.join(" ");
        });
    }

    setInterval(updateTimeSinceOrder, 1000);
    updateTimeSinceOrder();

    $(document).ready(function () {
        selectedStatus = 'in_progress';

        loadKotData(selectedCategory, selectedStatus);
        $('#in-progress-btn').addClass('active');

        $('#categoryTabs .nav-link').on('click', function () {
            $('#categoryTabs .nav-link').removeClass('active');
            $(this).addClass('active');
            selectedCategory = $(this).data('category');
            loadKotData(selectedCategory, selectedStatus);
        });

        $('#in-progress-btn').on('click', function () {
            selectedStatus = 'in_progress';
            loadKotData(selectedCategory, selectedStatus);
            $('#in-progress-btn').addClass('active').removeClass('inactive');
            $('#ready-btn').removeClass('active').addClass('inactive');
        });

        $('#ready-btn').on('click', function () {
            selectedStatus = 'ready';
            loadKotData(selectedCategory, selectedStatus);
            $('#ready-btn').addClass('active').removeClass('inactive');
            $('#in-progress-btn').removeClass('active').addClass('inactive');
        });
    });
</script>

<style>
    .nav-underline .nav-link {
        color: #1f73ae;
        padding: 0.5rem 1rem;
        font-size: 1rem;
        cursor: pointer;
    }

    .nav-underline .nav-link.active {
        font-size: 1.1rem;
        color: #1f73ae;
        border-bottom: 2px solid #1f73ae;
    }

    .custom-tag {
        display: flex;
        align-items: center;
    }

    .upper-div {
        background: #fff;
    }

    .content-div {
        background: #fff;
        padding: 1rem;
    }

    .kot-card {
        background: #fff;
        border: 3px dashed #dee2e6;
        border-radius: 0.25rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        width: 350px;
    }

    .btn-main {
        background-color: #1f73ae;
        border: none;
        color: white;
    }

    .btn-main:hover {
        background-color: #175a8a;
    }

    .page-text {
        color: #1f73ae;
    }

    p {
        margin-top: 0;
        margin-bottom: 0.1rem;
    }

    .card-slider {
        transition: transform 0.5s ease;
        display: flex;
        flex-wrap: nowrap;
    }

    .status-btn {
        border: 1px solid #1f73ae;
        transition: background-color 0.3s, color 0.3s;
    }

    .status-btn.active {
        background-color: #1f73ae;
        color: white;
    }

    .status-btn.inactive {
        background-color: white;
        color: #1f73ae;
    }

    #kot-in-progress,
    #kot-ready {
        overflow: hidden;
        position: relative;
    }
</style>