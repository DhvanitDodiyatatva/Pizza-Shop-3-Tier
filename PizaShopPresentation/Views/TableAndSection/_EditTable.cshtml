@model PizzaShopRepository.ViewModels.TableViewModel

<div class="modal fade" id="editItemModal_@Model.Id" tabindex="-1" aria-labelledby="editItemModalLabel_@Model.Id"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="editItemModalLabel_@Model.Id">Edit Table</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editTableForm_@Model.Id">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="Id" />
                <div class="modal-body">
                    <div class="row g-2 p-1">

                        <div class="row">
                            <div class="col">
                                <div class="form-floating mb-3">
                                    <input type="text" class="form-control" asp-for="Name" required />
                                    <label for="Name">Name*</label>
                                </div>
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="col">
                                <div class="form-floating mb-3">
                                    <select class="form-select" asp-for="SectionId" disabled
                                        asp-items="@(new SelectList(ViewBag.Sections, "Id", "Name"))" required>

                                    </select>
                                    <label for="SectionId">Sections*</label>
                                    <input type="hidden" asp-for="SectionId" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <div class="form-floating mb-3">
                                    <input type="Number" class="form-control" asp-for="Capacity" required />
                                    <label for="Name">Capacity*</label>
                                </div>
                                <span asp-validation-for="Capacity" class="text-danger"></span>
                            </div>
                            <div class="col">
                                <div class="form-floating mb-3">
                                    <select class="form-select" asp-for="Status" disabled>
                                        <option value="available">Available</option>
                                        <option value="occupied">Occupied</option>
                                        <option value="reserved">Reserved</option>
                                    </select>
                                    <label for="Status">Sections*</label>
                                    <input type="hidden" asp-for="Status" />
                                </div>
                            </div>
                        </div>




                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-main text-white">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

<script>
    $(document).ready(function () {

        // Submit the form using AJAX


        $("#editTableForm_@Model.Id").on("submit", function (e) {
            e.preventDefault();
            var formData = new FormData(this);

            $.ajax({
                url: '@Url.Action("UpdateTable", "TableAndSection")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    console.log("Server Response:", response); // Debugging

                    if (response.success) {
                        var modal = bootstrap.Modal.getInstance(document.getElementById("editItemModal_@Model.Id"));
                        modal.hide();

                        toastr.success("Table edited successfully!");


                        // Get the active category ID and reload items
                        var sectionId = $(".section-link.active").data("sections-id") || $("#SectionId").val();
                        loadTables(sectionId); // Reload items for the current category
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function (xhr, status, error) {

                    toastr.error("Error updating item. Please try again.");
                }
            });
        });



        // Function to load items for the selected category
        function loadTables(sectionId) {
            $.ajax({
                url: '@Url.Action("GetTables", "TableAndSection")',
                type: 'GET',
                data: { sectionId: sectionId },
                success: function (result) {
                    $("#GetTableList").html(result);
                },
                error: function (xhr, status, error) {
                    console.error("Error loading items:", error);
                    $("#GetTableList").html("Failed to load items");
                }
            });
        }

    });



</script>