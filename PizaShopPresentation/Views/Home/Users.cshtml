@model IEnumerable<PizzaShopRepository.ViewModels.UserList>

@{
  ViewData["Title"] = "Users";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
  integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


<div class="Users-content mt-0 p-xl-5 p-lg-4 p-md-4 p-sm-4 p-4">
  <div class="d-flex align-items-center justify-content-between my-2 z-0">
    <div>
      <div class="fw-bolder fs-2 page-text me-2">Users</div>
    </div>
    <div class="d-flex position-relative z-0">
      <form class="d-flex align-items-center" role="search" id="searchForm">
        <div class="input-group position-relative">
          <input class="form-control" type="search" placeholder="Search" aria-label="Search" name="searchQuery"
            id="searchInput" value="@ViewBag.SearchQuery" />
          <span class="search-img-desktop position-absolute">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search"
              viewBox="0 0 16 16">
              <path
                d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
            </svg>
          </span>
        </div>
        <input type="hidden" name="page" id="page" value="@ViewBag.CurrentPage" />
        <input type="hidden" name="pageSize" id="pageSize" value="@ViewBag.PageSize" />
        <input type="hidden" name="sortBy" id="sortBy" value="@ViewBag.SortBy" />
        <input type="hidden" name="sortOrder" id="sortOrder" value="@ViewBag.SortOrder" />
      </form>
      <a asp-controller="Home" asp-action="AddNewUser"><button
          class="btn btn-main  rounded-2 ms-1 text-white fs-6 d-none d-lg-block" type="submit">+Add
          User</button></a>
      <a asp-controller="Home" asp-action="AddNewUser"><button
          class="btn btn-main rounded- ms-1 text-white fs-6 d-block d-lg-none" type="submit">+</button></a>
    </div>
  </div>
  <div class="content-div rounded-2 shadow p-3">
    <div class="row table-responsive p-3">
      <table class="table table-hover" id="usersTable">
        <thead>
          <tr>
            <th scope="col" class="text-nowrap">
              <a href="@Url.Action("Users", new { searchQuery = ViewBag.SearchQuery, page = ViewBag.CurrentPage, pageSize = ViewBag.PageSize, sortBy = "name", sortOrder = (ViewBag.SortBy == "name" && ViewBag.SortOrder == "asc") ? "desc" : "asc" })"
                class="text-decoration-none text-secondary">
                Name
                @if (ViewBag.SortBy == "name")
                {
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                    class="bi @(ViewBag.SortOrder == "asc" ? "bi-arrow-up" : "bi-arrow-down")" viewBox="0 0 16 16">
                    <path fill-rule="evenodd"
                      d="@(ViewBag.SortOrder == "asc" ? "M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 0 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z" : "M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z")" />
                  </svg>
                }
                else
                {
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                    class="bi bi-arrow-down-up" viewBox="0 0 16 16">
                    <path fill-rule="evenodd"
                      d="M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 1 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5" />
                  </svg>
                }
              </a>
            </th>
            <th scope="col" class="text-nowrap text-secondary">Email</th>
            <th scope="col" class="text-nowrap text-secondary">Phone</th>
            <th scope="col" class="text-nowrap">
              <a href="@Url.Action("Users", new { searchQuery = ViewBag.SearchQuery, page = ViewBag.CurrentPage, pageSize = ViewBag.PageSize, sortBy = "role", sortOrder = (ViewBag.SortBy == "role" && ViewBag.SortOrder == "asc") ? "desc" : "asc" })"
                class="text-decoration-none text-secondary">
                Role
                @if (ViewBag.SortBy == "role")
                {
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                    class="bi @(ViewBag.SortOrder == "asc" ? "bi-arrow-up" : "bi-arrow-down")" viewBox="0 0 16 16">
                    <path fill-rule="evenodd"
                      d="@(ViewBag.SortOrder == "asc" ? "M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 0 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z" : "M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z")" />
                  </svg>
                }
                else
                {
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                    class="bi bi-arrow-down-up" viewBox="0 0 16 16">
                    <path fill-rule="evenodd"
                      d="M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 1 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5" />
                  </svg>
                }
              </a>
            </th>
            <th scope="col" class="text-nowrap text-secondary">Status</th>
            <th scope="col" class="text-nowrap text-secondary">Action</th>
          </tr>
        </thead>
        <tbody id="tableBody">
          @foreach (var user in Model)
          {
            <tr data-email="@user.Email">
              <td scope="row" class="d-flex align-items-center py-3 text-nowrap">
                <img src="@(!string.IsNullOrEmpty(user.ProfileImage) ? user.ProfileImage : "/images/Default_pfp.svg.png")"
                  alt="@user.FirstName @user.LastName profile image"
                  style="max-height: 30px; aspect-ratio: 1; margin-right: 2%; border-radius: 50%; object-fit: cover;" />
                @user.FirstName @user.LastName
              </td>
              <td class="py-3 text-nowrap">@user.Email</td>
              <td class="py-3 text-nowrap">@user.Phone</td>
              <td class="py-3 text-nowrap">
                @if (@user.Role == "super_admin")
                {
                  <span>Admin</span>
                }
                else if (@user.Role == "account_manager")
                {
                  <span>Account Manager</span>
                }
                else if (@user.Role == "chef")
                {
                  <span>Chef</span>
                }
              </td>
              <td class="py-3 text-nowrap">
                <span class="badge fw-bold fs-6 px-4 py-1 rounded-5 @(user.Status ? "bg-success" : "bg-secondary")">
                  @(user.Status ? "Active" : "Inactive")
                </span>
              </td>
              <td class="py-3 text-nowrap">
                <a asp-controller="Home" asp-action="EditUser" asp-route-id="@user.Id"
                  class="text-decoration-none text-black text-body-btn me-2">
                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-pen"
                    viewBox="0 0 16 16">
                    <path
                      d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001" />
                  </svg>
                </a>
                <button type="button" class="btn text-body-btn p-0" data-bs-toggle="modal"
                  data-bs-target="#deletemodal-@user.Id">
                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-trash3"
                    viewBox="0 0 16 16">
                    <path
                      d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 0 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                  </svg>
                </button>
                <div class="modal fade" id="deletemodal-@user.Id" tabindex="-1"
                  aria-labelledby="deletemodallabel-@user.Id" aria-hidden="true">
                  <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h1 class="modal-title fs-5" id="deletemodallabel-@user.Id">Delete confirmation</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <div class="modal-body d-flex align-items-center justify-content-center flex-column">
                        <img src="~/images/toppng.com-warning-icon-2400x2400.png" alt="DeleteModal"
                          style="height: 80px; width: 80px">
                        <p>Are you sure you want to delete this user?</p>
                      </div>
                      <div class="modal-footer d-flex justify-content-center align-items-center">
                        <form method="post" asp-controller="Home" asp-action="Delete">
                          <input type="hidden" name="id" value="@user.Id" />
                          <button type="submit" class="btn btn-main text-white">Yes</button>
                        </form>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                      </div>
                    </div>
                  </div>
                </div>
              </td>
            </tr>
          }
        </tbody>
      </table>
    </div>
    <nav aria-label="Page navigation example"
      class="d-flex align-items-center justify-content-between justify-content-lg-end flex-column flex-md-row">
      <div class="d-flex me-2 align-items-center mb-4">
        <p class="m-0 me-1">Items Per Page</p>
        <div class="">
          <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown"
            aria-expanded="false">
            @ViewBag.PageSize
          </button>
          <ul class="dropdown-menu">
            @foreach (var size in new int[] { 2, 5, 8, 10 })
            {
              <li><a class="dropdown-item"
                  href="@Url.Action("Users", new { page = 1, pageSize = size, sortBy = ViewBag.SortBy, sortOrder = ViewBag.SortOrder, searchQuery = ViewBag.SearchQuery })">@size</a>
              </li>
            }
          </ul>
        </div>
      </div>
      <ul class="pagination d-flex align-items-center mb-4" id="pagination">
        @{
          int totalPages = (int)Math.Ceiling((double)ViewBag.TotalUsers / ViewBag.PageSize);
          int currentPage = ViewBag.CurrentPage;
          int pageSize = ViewBag.PageSize;
          int start = ((currentPage - 1) * pageSize) + 1;
          int end = Math.Min(start + pageSize - 1, ViewBag.TotalUsers);
        }
        <p class="m-0 me-1">Showing @start - @end of @ViewBag.TotalUsers</p>
        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
          <a class="page-link text-decoration-none text-body"
            href="@Url.Action("Users", new { page = currentPage - 1, pageSize, searchQuery = ViewBag.SearchQuery, sortBy = ViewBag.SortBy, sortOrder = ViewBag.SortOrder })">
            < </a>
        </li>
        @for (int i = 1; i <= totalPages; i++)
        {
          <li class="page-item  @(i == currentPage ? "active" : "")">
            <a class="page-link  text-decoration-none text-body"
              href="@Url.Action("Users", new { page = i, pageSize, searchQuery = ViewBag.SearchQuery, sortBy = ViewBag.SortBy, sortOrder = ViewBag.SortOrder })">@i</a>
          </li>
        }
        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
          <a class="page-link text-decoration-none text-body"
            href="@Url.Action("Users", new { page = currentPage + 1, pageSize, searchQuery = ViewBag.SearchQuery, sortBy = ViewBag.SortBy, sortOrder = ViewBag.SortOrder })">></a>
        </li>
      </ul>
    </nav>
  </div>
</div>

@section Scripts {
  <script>
    // Debounce function to limit the rate of search requests
    function debounce(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    }

    // Function to perform the dynamic search
    function performSearch() {
      const searchQuery = document.getElementById('searchInput').value;
      const page = document.getElementById('page').value;
      const pageSize = document.getElementById('pageSize').value;
      const sortBy = document.getElementById('sortBy').value;
      const sortOrder = document.getElementById('sortOrder').value;

      // Update hidden inputs to maintain state
      document.getElementById('page').value = 1; // Reset to first page on new search
      document.getElementById('pageSize').value = pageSize;
      document.getElementById('sortBy').value = sortBy;
      document.getElementById('sortOrder').value = sortOrder;

      // Construct the URL with query parameters
      const url = '@Url.Action("Users", "Home")' + '?searchQuery=' + encodeURIComponent(searchQuery) +
        '&page=' + 1 +
        '&pageSize=' + pageSize +
        '&sortBy=' + sortBy +
        '&sortOrder=' + sortOrder;

      // Perform AJAX request
      fetch(url, {
        method: 'GET',
        headers: {
          'X-Requested-With': 'XMLHttpRequest' // Indicate AJAX request
        }
      })
        .then(response => response.text())
        .then(data => {
          // Update the table body and pagination with the new content
          const parser = new DOMParser();
          const doc = parser.parseFromString(data, 'text/html');
          const newTableBody = doc.querySelector('#tableBody');
          const newPagination = doc.querySelector('#pagination');

          if (newTableBody && newPagination) {
            document.getElementById('tableBody').innerHTML = newTableBody.innerHTML;
            document.getElementById('pagination').innerHTML = newPagination.innerHTML;
            updatePageInfo(doc); // Update page info
          }
        })
        .catch(error => console.error('Error fetching search results:', error));
    }

    // Function to update page info from the new document
    function updatePageInfo(doc) {
      const newTotalUsers = doc.querySelector('p.m-0.me-1')?.textContent.match(/of (\d+)/)?.[1];
      const newStartEnd = doc.querySelector('p.m-0.me-1')?.textContent.match(/Showing (\d+ - \d+)/)?.[1];
      if (newTotalUsers) ViewBag.TotalUsers = newTotalUsers;
      if (newStartEnd) document.querySelector('p.m-0.me-1').textContent = `Showing ${newStartEnd} of ${newTotalUsers}`;
    }

    // Add event listener for input changes with debounce
    document.getElementById('searchInput').addEventListener('input', debounce(performSearch, 300));

    // Function to disable edit and delete actions for the logged-in user
    function disableOwnUserActions() {
      const currentUserEmail = '@ViewBag.CurrentUserEmail'; // Get logged-in user's email from ViewBag
      const rows = document.querySelectorAll('#tableBody tr');

      rows.forEach(row => {
        const userEmail = row.getAttribute('data-email');
        const editLink = row.querySelector('a[href*="EditUser"]');
        const deleteButton = row.querySelector('button[data-bs-toggle="modal"]');

        if (userEmail === currentUserEmail && editLink && deleteButton) {
          editLink.classList.add('disabled');
          editLink.setAttribute('tabindex', '-1');
          editLink.style.pointerEvents = 'none';
          editLink.style.opacity = '0.65';
          deleteButton.classList.add('disabled');
          deleteButton.setAttribute('tabindex', '-1');
          deleteButton.style.pointerEvents = 'none';
          deleteButton.style.opacity = '0.65';

          // Disable the delete modal form submission
          const deleteModal = document.getElementById(`deletemodal-${editLink.getAttribute('data-id')}`);
          if (deleteModal) {
            const submitButton = deleteModal.querySelector('form button[type="submit"]');
            if (submitButton) {
              submitButton.disabled = true;
              submitButton.style.cursor = 'not-allowed';
            }
          }
        }
      });
    }

    // Run the disable function when the page loads and after each search
    document.addEventListener('DOMContentLoaded', disableOwnUserActions);
    document.getElementById('searchForm').addEventListener('input', debounce(disableOwnUserActions, 300));


    $(document).ready(function () {
      toastr.options = {

        "positionClass": "toast-top-right",
        "progressBar": true,
        "timeOut": "5000"
      };

      @if (TempData["SuccessMessage"] != null)
        {
          <text>toastr.success('@TempData["SuccessMessage"]');</text>
      }
        @if (TempData["ErrorMessage"] != null)
        {
          <text>toastr.error('@TempData["ErrorMessage"]');</text>
      }
    });
  </script>
}

<style>
  .table td,
  .table th {
    padding: 0.75rem 0.5rem;
    /* Consistent padding as per Bootstrap default */
  }

  .disabled {
    pointer-events: none;
    opacity: 0.65;
    cursor: not-allowed;
  }

  .text-body-btn {
    color: #000;
    /* Match the reference page's action button color */
  }

  .name-column {
    display: flex;
    align-items: center;
    gap: 2%;
    /* Match the inline style margin-right: 2% */
  }

  .active>.page-link,
  .page-link.active {
    z-index: 3;
    color: var(--bs-pagination-active-color);
    background-color: #1f73ae;
    border-color: #1f73ae;
  }
</style>