@model PizzaShopRepository.ViewModels.AddEditUserVM;

@{
    ViewData["Title"] = "Edit User";
}

<div class="Users-content mt-0 p-xl-5 p-lg-4 p-md-4 p-sm-4 p-4">
    <div class="d-flex align-items-center justify-content-between my-2 z-0">
        <div>
            <h2 class="fw-bolder fs-2 page-text me-2">Edit User</h2>
        </div>
    </div>

    <div class="content-div rounded-2 shadow p-3">
        <div class="card p-4">
            <form asp-controller="Home" asp-action="UpdateUser" method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="Id" />

                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="FirstName" class="form-control" placeholder="First Name">
                            <label asp-for="FirstName">First Name</label>
                            <span asp-validation-for="FirstName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="LastName" class="form-control" placeholder="Last Name">
                            <label asp-for="LastName">Last Name</label>
                            <span asp-validation-for="LastName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="Username" class="form-control" placeholder="Username">
                            <label asp-for="Username">Username</label>
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating">
                            <select asp-for="Role" class="form-select">
                                <option selected>Select Role</option>
                                <option value="super_admin">Super Admin</option>
                                <option value="account_manager">Account Manager</option>
                                <option value="chef">Chef</option>
                            </select>
                            <label asp-for="Role">Role</label>
                            <span asp-validation-for="Role" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="Email" class="form-control" placeholder="Email">
                            <label asp-for="Email">Email</label>
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating">
                            <select asp-for="Status" class="form-select">
                                <option selected>Select Status</option>
                                <option value="true">Active</option>
                                <option value="false">Inactive</option>
                            </select>
                            <label asp-for="Status">Status</label>
                            <span asp-validation-for="Status" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-floating">
                            <input asp-for="ProfileImage" type="file" class="form-control" placeholder="Profile Image">
                            <label asp-for="ProfileImage">Profile Image</label>
                            <span asp-validation-for="ProfileImage" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-floating">
                            <select asp-for="Country" class="form-select" id="selectCountry">
                                <option selected>Select Country</option>
                            </select>
                            <label asp-for="Country">Country</label>
                            <span asp-validation-for="Country" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-floating">
                            <select asp-for="State" class="form-select" id="selectState">
                                <option selected>Select State</option>
                            </select>
                            <label asp-for="State">State</label>
                            <span asp-validation-for="State" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-floating">
                            <select asp-for="City" class="form-select" id="selectCity">
                                <option selected>Select City</option>
                            </select>
                            <label asp-for="City">City</label>
                            <span asp-validation-for="City" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-floating">
                            <input asp-for="Zipcode" class="form-control" placeholder="Zipcode">
                            <label asp-for="Zipcode">Zipcode</label>
                            <span asp-validation-for="Zipcode" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-floating">
                            <input asp-for="Address" class="form-control" placeholder="Address">
                            <label asp-for="Address">Address</label>
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-floating">
                            <input asp-for="Phone" class="form-control" placeholder="Phone">
                            <label asp-for="Phone">Phone</label>
                            <span asp-validation-for="Phone" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-12 text-end mt-4">
                        <button type="submit" class="btn btn-primary">Edit User</button>
                        <a asp-action="Users" class="btn btn-secondary">Cancel</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let countryDropdown = document.getElementById("selectCountry");
        let stateDropdown = document.getElementById("selectState");
        let cityDropdown = document.getElementById("selectCity");

        let selectedCountry = "@Model.Country";
        let selectedState = "@Model.State";
        let selectedCity = "@Model.City";

        // Load Countries
        fetch("https://restcountries.com/v3.1/all")
            .then(response => response.json())
            .then(data => {
                data.forEach(country => {
                    let option = document.createElement("option");
                    option.value = country.name.common;
                    option.textContent = country.name.common;
                    if (country.name.common === selectedCountry) {
                        option.selected = true;
                    }
                    countryDropdown.appendChild(option);
                });

                if (selectedCountry) {
                    loadStates(selectedCountry);
                }
            })
            .catch(error => console.error("Error fetching countries:", error));

        // Load States based on Selected Country
        function loadStates(country) {
            fetch("https://countriesnow.space/api/v0.1/countries/states", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ country: country })
            })
                .then(response => response.json())
                .then(data => {
                    stateDropdown.innerHTML = '<option value="">Select State</option>';
                    data.data.states.forEach(state => {
                        let option = document.createElement("option");
                        option.value = state.name;
                        option.textContent = state.name;
                        if (state.name === selectedState) {
                            option.selected = true;
                        }
                        stateDropdown.appendChild(option);
                    });

                    if (selectedState) {
                        loadCities(selectedCountry, selectedState);
                    }
                })
                .catch(error => console.error("Error fetching states:", error));
        }

        // Load Cities based on Selected State
        function loadCities(country, state) {
            fetch("https://countriesnow.space/api/v0.1/countries/state/cities", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ country: country, state: state })
            })
                .then(response => response.json())
                .then(data => {
                    cityDropdown.innerHTML = '<option value="">Select City</option>';
                    data.data.forEach(city => {
                        let option = document.createElement("option");
                        option.value = city;
                        option.textContent = city;
                        if (city === selectedCity) {
                            option.selected = true;
                        }
                        cityDropdown.appendChild(option);
                    });
                })
                .catch(error => console.error("Error fetching cities:", error));
        }

        // Change events
        countryDropdown.addEventListener("change", function () {
            loadStates(this.value);
        });

        stateDropdown.addEventListener("change", function () {
            loadCities(countryDropdown.value, this.value);
        });
    });
</script>