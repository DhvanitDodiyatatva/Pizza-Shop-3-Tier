@{
    ViewData["Title"] = "Dashboard";
}

@if (TempData["successMessage"] != null)
{
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script type="text/javascript">
        toastr.success("@TempData["successMessage"]");
    </script>
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<style>
    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .card h6 {
        color: #6c757d;
        font-size: 0.9rem;
    }

    .card h3 {
        font-size: 1.5rem;
        font-weight: bold;
    }

    .chart-container {
        position: relative;
        height: 200px;
        width: 100%;
    }

    .dropdown-toggle::after {
        margin-left: 0.5rem;
    }

    .btn-main {
        background-color: #007bff;
    }

    .btn-main:hover {
        background-color: #0056b3;
    }
</style>

<div class="dashboard-content mt-0 p-5">
    <div class="row my-2 justify-content-between">
        <div class="mb-3 fw-bolder fs-2 page-text me-2 col-md-5">Dashboard</div>
        <div class="dropdown col-md-6 text-end">
            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="timeFrameDropdown"
                data-bs-toggle="dropdown" aria-expanded="false">
                @(ViewBag.TimeFrame == "Today" ? "Today" :
                                ViewBag.TimeFrame == "Last7Days" ? "Last 7 Days" :
                                ViewBag.TimeFrame == "Last30Days" ? "Last 30 Days" :
                                ViewBag.TimeFrame == "CustomDate" ? "Custom Date" : "Current Month")
            </button>
            <ul class="dropdown-menu" aria-labelledby="timeFrameDropdown">
                <li><a class="dropdown-item"
                        href="@Url.Action("Dashboard", "Home", new { timeFrame = "Today" })">Today</a></li>
                <li><a class="dropdown-item"
                        href="@Url.Action("Dashboard", "Home", new { timeFrame = "Last7Days" })">Last 7 Days</a></li>
                <li><a class="dropdown-item"
                        href="@Url.Action("Dashboard", "Home", new { timeFrame = "Last30Days" })">Last 30 Days</a></li>
                <li><a class="dropdown-item"
                        href="@Url.Action("Dashboard", "Home", new { timeFrame = "CurrentMonth" })">Current Month</a>
                </li>
                <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#exampleModal">Custom
                        Date</a></li>
            </ul>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-3 col-md-6 col-sm-6 mb-3">
            <div class="card p-3 d-flex flex-row justify-content-between h-100">
                <div class="justify-content-start">
                    <h3>₹@ViewBag.TotalSales</h3>
                    <h6>Total Sales</h6>
                </div>
                <div class="justify-content-end">
                    <div class="rounded-pill p-1" style="border: 2px solid green;">
                        <div class="rounded-pill p-1 bg-success-subtle">
                            <svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="green"
                                class="bi bi-bar-chart" viewBox="0 0 16 16">
                                <path
                                    d="M4 11H2v3h2zm5-4H7v7h2zm5-5v12h-2V2zm-2-1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM6 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm-5 4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1z" />
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-6 mb-3">
            <div class="card p-3 d-flex flex-row justify-content-between h-100">
                <div>
                    <h3>@ViewBag.TotalOrders</h3>
                    <h6>Total Orders</h6>
                </div>
                <div class="justify-content-end">
                    <div class="rounded-pill p-1" style="border: 2px solid rgb(163, 128, 163);">
                        <div class="rounded-pill p-1" style="background-color: rgb(163, 128, 163);">
                            <svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="purple"
                                class="bi bi-journal-text" viewBox="0 0 16 16">
                                <path
                                    d="M5 10.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5m0-2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0-2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0-2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5" />
                                <path
                                    d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2" />
                                <path
                                    d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1z" />
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-6 mb-3">
            <div class="card p-3 h-100 d-flex flex-row justify-content-between">
                <div>
                    <h3>₹@Math.Round((decimal)ViewBag.AvgOrderValue, 1)</h3>
                    <h6>Avg Order Value</h6>
                </div>
                <div class="justify-content-end">
                    <div class="rounded-pill p-1" style="border: 2px solid green;">
                        <div class="rounded-pill p-1 bg-success-subtle">
                            <svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="green"
                                class="bi bi-receipt-cutoff" viewBox="0 0 16 16">
                                <path
                                    d="M3 4.5a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5M11.5 4a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1zm0 2a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1zm0 2a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1zm0 2a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1zm0 2a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1z" />
                                <path
                                    d="M2.354.646a.5.5 0 0 0-.801.13l-.5 1A.5.5 0 0 0 1 2v13H.5a.5.5 0 0 0 0 1h15a.5.5 0 0 0 0-1H15V2a.5.5 0 0 0-.053-.224l-.5-1a.5.5 0 0 0-.8-.13L13 1.293l-.646-.647a.5.5 0 0 0-.708 0L11 1.293l-.646-.647a.5.5 0 0 0-.708 0L9 1.293 8.354.646a.5.5 0 0 0-.708 0L7 1.293 6.354.646a.5.5 0 0 0-.708 0L5 1.293 4.354.646a.5.5 0 0 0-.708 0L3 1.293zm-.217 1.198.51.51a.5.5 0 0 0 .707 0L4 1.707l.646.647a.5.5 0 0 0 .708 0L6 1.707l.646.647a.5.5 0 0 0 .708 0L8 1.707l.646.647a.5.5 0 0 0 .708 0L10 1.707l.646.647a.5.5 0 0 0 .708 0L12 1.707l.646.647a.5.5 0 0 0 .708 0l.509-.51.137.274V15H2V2.118z" />
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-6 mb-3">
            <div class="card p-3 h-100 d-flex flex-row justify-content-between">
                <div>
                    <h3>@ViewBag.AvgWaitingTime mins</h3>
                    <h6>Avg Waiting Time</h6>
                </div>
                <div class="justify-content-end">
                    <div class="rounded-pill p-1" style="border: 2px solid rgb(209, 72, 72);">
                        <div class="rounded-pill p-1" style="background-color: #ca8d8d;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" fill="brown"
                                class="bi bi-stopwatch" viewBox="0 0 16 16">
                                <path d="M8.5 5.6a.5.5 0 1 0-1 0v2.9h-3a.5.5 0 0 0 0 1H8a.5.5 0 0 0 .5-.5z" />
                                <path
                                    d="M6.5 1A.5.5 0 0 1 7 .5h2a.5.5 0 0 1 0 1v.57c1.36.196 2.594.78 3.584 1.64l.012-.013.354-.354-.354-.353a.5.5 0 0 1 .707-.708l1.414 1.415a.5.5 0 1 1-.707.707l-.353-.354-.354.354-.013.012A7 7 0 1 1 7 2.071V1.5a.5.5 0 0 1-.5-.5M8 3a6 6 0 1 0 .001 12A6 6 0 0 0 8 3" />
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 mb-3">
            <div class="card p-3">
                <h6>Revenue</h6>
                <div class="chart-container">
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6 mb-3">
            <div class="card p-3">
                <h6>Customer Growth</h6>
                <div class="chart-container">
                    <canvas id="customerGrowthChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-3 col-md-6 col-sm-6 mb-3">
            <div class="card p-3 h-100">
                <h6>Top Selling Items</h6>
                @if (ViewBag.TopSellingItems != null && ViewBag.TopSellingItems.Count > 0)
                {
                    int rank = 1;
                    foreach (var item in ViewBag.TopSellingItems)
                    {
                        <div class="text-start mb-2  d-flex flex-column align-items-start">
                            <div class="d-flex align-items-center">
                                <div>
                                    <span class="fw-bold text-secondary ">#@rank</span>
                                    <span class="ms-1"><img class="mx-2" src="/images/dining-menu.png" alt="item-img"
                                            style="height: 40px; aspect-ratio: 1/1; margin-right: 3%; border-radius: 50%; object-fit: cover;"></span>
                                </div>
                                <div>
                                    <div>@item.ItemName</div>
                                    <div class=" text-muted " style="font-size: 0.8rem;"><span><img src="~/images/dish.png"
                                                class="" style="height: 20px; width:20px;"></span>
                                        @item.OrderCount orders</div>
                                </div>
                            </div>

                        </div>
                        <hr class="my-1">
                        rank++;
                    }
                }
                else
                {
                    <p>No data available</p>
                }
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-6 mb-3">
            <div class="card p-3 h-100">
                <h6>Least Selling Items</h6>
                @if (ViewBag.LeastSellingItems != null && ViewBag.LeastSellingItems.Count > 0)
                {
                    int rank = 1;
                    foreach (var item in ViewBag.LeastSellingItems)
                    {
                        <div class="text-start mb-2  d-flex flex-column align-items-start">
                            <div class="d-flex align-items-center">
                                <div>
                                    <span class="fw-bold text-secondary ">#@rank</span>
                                    <span class="ms-1"><img class="mx-2" src="/images/dining-menu.png" alt="item-img"
                                            style="height: 40px; aspect-ratio: 1/1; margin-right: 3%; border-radius: 50%; object-fit: cover;"></span>
                                </div>
                                <div>
                                    <div>@item.ItemName</div>
                                    <div class=" text-muted " style="font-size: 0.8rem;"><span><img src="~/images/dish.png"
                                                class="" style="height: 20px; width:20px;"></span>
                                        @item.OrderCount orders</div>
                                </div>
                            </div>

                        </div>
                        <hr class="my-1">
                        rank++;
                    }
                }
                else
                {
                    <p>No data available</p>
                }
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-6 mb-3">
            <div class="card p-3 h-100 d-flex flex-row justify-content-between">
                <div class="d-flex align-items-end">
                    <div>
                        <h3>@ViewBag.WaitingListCount</h3>
                        <h6>Waiting Count</h6>
                    </div>
                </div>
                <div class="d-flex align-items-start">
                    <div class="rounded-pill p-1" style="border: 2px solid orange;">
                        <div class="rounded-pill p-1" style="background-color: orange;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor"
                                class="bi bi-hourglass" viewBox="0 0 16 16">
                                <path
                                    d="M2 1.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-1v1a4.5 4.5 0 0 1-2.557 4.06c-.29.139-.443.377-.443.59v.7c0 .213.154.451.443.59A4.5 4.5 0 0 1 12.5 13v1h1a.5.5 0 0 1 0 1h-11a.5.5 0 1 1 0-1h1v-1a4.5 4.5 0 0 1 2.557-4.06c.29-.139.443-.377.443-.59v-.7c0-.213-.154-.451-.443-.59A4.5 4.5 0 0 1 3.5 3V2h-1a.5.5 0 0 1-.5-.5m2.5.5v1a3.5 3.5 0 0 0 1.989 3.158c.533.256 1.011.791 1.011 1.491v.702c0 .7-.478 1.235-1.011 1.491A3.5 3.5 0 0 0 4.5 13v1h7v-1a3.5 3.5 0 0 0-1.989-3.158C8.978 9.586 8.5 9.052 8.5 8.351v-.702c0-.7.478-1.235 1.011-1.491A3.5 3.5 0 0 0 11.5 3V2z" />
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-6 mb-3">
            <div class="card p-3 h-100 d-flex flex-row justify-content-between">
                <div class="d-flex align-items-end">
                    <div>
                        <h3>@ViewBag.NewCustomerCount</h3>
                        <h6>New Customer Count</h6>
                    </div>
                </div>
                <div class="d-flex align-items-start">
                    <div class="rounded-pill p-1" style="border: 2px solid orange;">
                        <div class="rounded-pill p-1" style="background-color: orange;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor"
                                class="bi bi-person-fill" viewBox="0 0 16 16">
                                <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6" />
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Select Date Range</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6 form-floating flex-grow-1 flex-md-grow-0 mb-3" style="max-width: 350px;">
                        <input type="date" class="form-control" id="fromDate" />
                        <label for="fromDate">From date</label>
                    </div>
                    <div class="col-md-6 form-floating flex-grow-1 flex-md-grow-0 mb-3" style="max-width: 350px;">
                        <input type="date" class="form-control" id="toDate" />
                        <label for="toDate">To date</label>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-main text-white" id="submitDateRange">Submit</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script>
    const timeFrame = '@ViewBag.TimeFrame';

    // Revenue Chart
    const revenueData = @Html.Raw(Json.Serialize(ViewBag.RevenueData));
    const revenueLabels = revenueData.length > 0 ? revenueData.map(item => item.date) : ['Invalid Date'];
    const revenueValues = revenueData.length > 0 ? revenueData.map(item => item.value) : [0];

    let xAxisTitle;
    let tickCallback;

    const firstRevenueDate = revenueData[0]?.date;
    if (timeFrame === 'Today') {
        xAxisTitle = 'Time';
        tickCallback = function (value, index, values) {
            return revenueLabels[index]; // "HH:00" format
        };
    } else if (firstRevenueDate?.length === 7) { // "yyyy-MM" format
        xAxisTitle = 'Month';
        tickCallback = function (value, index, values) {
            const label = revenueLabels[index];
            const [year, month] = label.split('-');
            const date = new Date(year, month - 1);
            return date.toLocaleString('default', { month: 'short' });
        };
    } else { // "yyyy-MM-dd" format
        xAxisTitle = 'Date';
        tickCallback = function (value, index, values) {
            const label = revenueLabels[index];
            return label === 'Invalid Date' ? label : new Date(label).toLocaleDateString();
        };
    }

    const revenueChart = new Chart(document.getElementById('revenueChart'), {
        type: 'line',
        data: {
            labels: revenueLabels,
            datasets: [{
                label: 'Revenue',
                data: revenueValues,
                borderColor: '#007bff',
                backgroundColor: 'rgba(0, 123, 255, 0.4)',
                fill: true,
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                x: {
                    title: {
                        display: true,
                        text: xAxisTitle
                    },
                    ticks: {
                        callback: tickCallback
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Revenue (₹)'
                    },
                    beginAtZero: true,
                    max: 15000
                }
            }
        }
    });

    // Customer Growth Chart
    const customerGrowthData = @Html.Raw(Json.Serialize(ViewBag.CustomerGrowthData));
    const customerGrowthLabels = customerGrowthData.length > 0 ? customerGrowthData.map(item => item.date) : ['Invalid Date'];
    const customerGrowthValues = customerGrowthData.length > 0 ? customerGrowthData.map(item => item.value) : [0];

    let customerXAxisTitle;
    let customerTickCallback;

    const firstCustomerDate = customerGrowthData[0]?.date;
    if (timeFrame === 'Today') {
        customerXAxisTitle = 'Time';
        customerTickCallback = function (value, index, values) {
            return customerGrowthLabels[index]; // "HH:00" format
        };
    } else if (firstCustomerDate?.length === 7) { // "yyyy-MM" format
        customerXAxisTitle = 'Month';
        customerTickCallback = function (value, index, values) {
            const label = customerGrowthLabels[index];
            const [year, month] = label.split('-');
            const date = new Date(year, month - 1);
            return date.toLocaleString('default', { month: 'short' });
        };
    } else { // "yyyy-MM-dd" format
        customerXAxisTitle = 'Date';
        customerTickCallback = function (value, index, values) {
            const label = customerGrowthLabels[index];
            return label === 'Invalid Date' ? label : new Date(label).toLocaleDateString();
        };
    }

    const customerGrowthChart = new Chart(document.getElementById('customerGrowthChart'), {
        type: 'line',
        data: {
            labels: customerGrowthLabels,
            datasets: [{
                label: 'Customers',
                data: customerGrowthValues,
                borderColor: '#007bff',
                backgroundColor: 'rgba(0, 123, 255, 0.4)',
                fill: true,
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                x: {
                    title: {
                        display: true,
                        text: customerXAxisTitle
                    },
                    ticks: {
                        callback: customerTickCallback
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Customer Count'
                    },
                    beginAtZero: true,
                    max: 20
                }
            }
        }
    });

    // Handle Custom Date Range Submission
    document.getElementById('submitDateRange').addEventListener('click', function () {
        const fromDate = document.getElementById('fromDate').value;
        const toDate = document.getElementById('toDate').value;

        if (fromDate && toDate) {
            window.location.href = '@Url.Action("Dashboard", "Home", new { timeFrame = "CustomDate" })' + '&fromDate=' + fromDate + '&toDate=' + toDate;
        }
    });
</script>