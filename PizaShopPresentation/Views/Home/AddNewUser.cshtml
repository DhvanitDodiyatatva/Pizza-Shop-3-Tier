@model PizzaShopRepository.ViewModels.AddEditUserVM;

@{
    ViewData["Title"] = "Add New User";
}

<div class="Users-content mt-0 p-xl-5 p-lg-4 p-md-4 p-sm-4 p-4">
    <div class="d-flex align-items-center justify-content-between my-2 z-0">
        <div>
            <h2 class="fw-bolder fs-2 page-text me-2">Add New User</h2>
        </div>
    </div>

    <div class="content-div rounded-2 shadow p-3">

        <form asp-action="AddNewUser" method="post" enctype="multipart/form-data">
            <div class="row g-3">
                <div class="col-md-6">
                    <div class="form-floating">
                        <input asp-for="FirstName" class="form-control" placeholder="First Name">
                        <label asp-for="FirstName">First Name</label>
                        <span asp-validation-for="FirstName" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating">
                        <input asp-for="LastName" class="form-control" placeholder="Last Name">
                        <label asp-for="LastName">Last Name</label>
                        <span asp-validation-for="LastName" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating">
                        <input asp-for="Username" class="form-control" placeholder="Username">
                        <label asp-for="Username">Username</label>
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating">
                        <select asp-for="Role" class="form-select">
                            <option value="" selected>Select Role</option>
                            <option value="super_admin">Admin</option>
                            <option value="account_manager">Account Manager</option>
                            <option value="chef">Chef</option>
                        </select>
                        <label asp-for="Role">Role</label>
                        <span asp-validation-for="Role" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating">
                        <input asp-for="Email" class="form-control" placeholder="Email">
                        <label asp-for="Email">Email</label>
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">

                    <div class="form-floating">
                        <div class="d-flex align-items-center justify-content-end position-relative form-floating">
                            <input asp-for="Password" class="form-control" placeholder="Password" type="password"
                                id="inputPassword">
                            <label asp-for="Password">Password</label>
                            <img src="~/images/icons/passwordhide.png" alt="eye-icon" id="togglePassword"
                                style="width: 20px; aspect-ratio: 1; cursor: pointer;"
                                class="me-2 position-absolute rounded-2">

                        </div>

                        <span asp-validation-for="Password" class="text-danger"></span>
                        <div id="passwordErrors" class="text-danger">
                            <div id="uppercaseError" class="password-error"></div>
                            <div id="lowercaseError" class="password-error"></div>
                            <div id="digitError" class="password-error"></div>
                            <div id="specialCharError" class="password-error"></div>
                            <div id="lengthError" class="password-error"></div>
                        </div>
                    </div>

                </div>
                @* <div class="col-md-12">
                    <div class="form-floating">
                        <input asp-for="ProfileImage" type="file" class="form-control" placeholder="Profile Image">
                        <label asp-for="ProfileImage">Profile Image</label>
                        <span asp-validation-for="ProfileImage" class="text-danger"></span>
                    </div>
                </div> *@
                <div class="row pt-3 px-2 ms-0 me-0 w-100">
                    <input type="file" class="d-none" id="file" asp-for="ImageFile" accept="image/*" />
                    <div id="imagePreviewContainer" class="text-center"
                        style="border: 2px dashed #d7d8da; height: 100px; display: flex; align-items: center; justify-content: center; position: relative;">
                        <label for="file" id="uploadLabel"
                            class="btn-outline-danger text-center d-flex justify-content-center align-items-center fs-5 rounded-3"
                            style="width: 100%; height: 100%; cursor: pointer;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor"
                                class="bi bi-cloud-arrow-up" viewBox="0 0 16 16">
                                <path fill-rule="evenodd"
                                    d="M7.646 5.146a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 6.707V10.5a.5.5 0 0 1-1 0V6.707L6.354 7.854a.5.5 0 1 1-.708-.708z" />
                                <path
                                    d="M4.406 3.342A5.53 5.53 0 0 1 8 2c2.69 0 4.923 2 5.166 4.579C14.758 6.804 16 8.137 16 9.773 16 11.569 14.502 13 12.687 13H3.781C1.708 13 0 11.366 0 9.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383m.653.757c-.757.653-1.153 1.44-1.153 2.056v.448l-.445.049C2.064 6.805 1 7.952 1 9.318 1 10.785 2.23 12 3.781 12h8.906C13.98 12 15 10.988 15 9.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 4.825 10.328 3 8 3a4.53 4.53 0 0 0-2.941 1.1z" />
                            </svg>
                            Browse files
                        </label>
                        <img id="imagePreview" src="#" alt="Image Preview"
                            style="display: none; max-height: 100%; max-width: 100%; object-fit: contain;" />
                        <button type="button" id="deleteImage"
                            style="display: none; position: absolute; top: 5px; right: 5px; background: red; color: white; border: none; border-radius: 50%; width: 20px; height: 20px; line-height: 20px; text-align: center; cursor: pointer;">Ã—</button>
                    </div>
                    <span asp-validation-for="ImageFile" class="text-danger"></span>
                </div>

                <div class="col-md-4">
                    <div class="form-floating">
                        <select asp-for="Country" class="form-select" id="selectCountry">
                            <option value="" selected>Select Country</option>
                        </select>
                        <label asp-for="Country">Country</label>
                        <span asp-validation-for="Country" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-floating">
                        <select asp-for="State" class="form-select" id="selectState">
                            <option value="" selected>Select State</option>
                        </select>
                        <label asp-for="State">State</label>
                        <span asp-validation-for="State" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-floating">
                        <select asp-for="City" class="form-select" id="selectCity">
                            <option value="" selected>Select City</option>
                        </select>
                        <label asp-for="City">City</label>
                        <span asp-validation-for="City" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-floating">
                        <input asp-for="Zipcode" class="form-control" placeholder="Zipcode">
                        <label asp-for="Zipcode">Zipcode</label>
                        <span asp-validation-for="Zipcode" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-floating">
                        <input asp-for="Address" class="form-control" placeholder="Address">
                        <label asp-for="Address">Address</label>
                        <span asp-validation-for="Address" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-floating">
                        <input asp-for="Phone" class="form-control" placeholder="Phone">
                        <label asp-for="Phone">Phone</label>
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-12 text-end mt-4">
                    <button type="submit" class="btn btn-main text-white">Add User</button>
                    <a asp-action="Users" class="btn btn-secondary">Cancel</a>
                </div>
            </div>
        </form>

    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script>



    fetch("https://restcountries.com/v3.1/all")
        .then(response => response.json())
        .then(data => {
            let countryDropdown = document.getElementById("selectCountry");
            data.forEach(country => {
                let option = document.createElement("option");
                option.value = country.name.common;
                option.textContent = country.name.common;
                countryDropdown.appendChild(option);
            });
        })
        .catch(error => console.error("Error fetching countries:", error));

    document.getElementById("selectCountry").addEventListener("change", function () {
        let country = this.value;
        fetch("https://countriesnow.space/api/v0.1/countries/states", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ country: country })
        })
            .then(response => response.json())
            .then(data => {
                let stateDropdown = document.getElementById("selectState");
                stateDropdown.innerHTML = '<option value="">Select State</option>';
                data.data.states.forEach(state => {
                    let option = document.createElement("option");
                    option.value = state.name;
                    option.textContent = state.name;
                    stateDropdown.appendChild(option);
                });
            })
            .catch(error => console.error("Error fetching states:", error));
    });

    document.getElementById("selectState").addEventListener("change", function () {
        let state = this.value;
        let country = document.getElementById("selectCountry").value;
        fetch("https://countriesnow.space/api/v0.1/countries/state/cities", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ country: country, state: state })
        })
            .then(response => response.json())
            .then(data => {
                let cityDropdown = document.getElementById("selectCity");
                cityDropdown.innerHTML = '<option value="">Select City</option>';
                data.data.forEach(city => {
                    let option = document.createElement("option");
                    option.value = city;
                    option.textContent = city;
                    cityDropdown.appendChild(option);
                });
            })
            .catch(error => console.error("Error fetching cities:", error));
    });


    // Password validation function
    function validatePassword() {
        const password = document.getElementById("inputPassword").value;
        const uppercaseError = document.getElementById("uppercaseError");
        const lowercaseError = document.getElementById("lowercaseError");
        const digitError = document.getElementById("digitError");
        const specialCharError = document.getElementById("specialCharError");
        const lengthError = document.getElementById("lengthError");

        // Regular expressions for each requirement
        const hasUppercase = /[A-Z]/.test(password);
        const hasLowercase = /[a-z]/.test(password);
        const hasDigit = /\d/.test(password);
        const hasSpecialChar = /[^\da-zA-Z]/.test(password);
        const hasMinLength = password.length >= 6;

        // Update error messages
        uppercaseError.textContent = hasUppercase ? "" : "Password must contain at least one uppercase letter.";
        lowercaseError.textContent = hasLowercase ? "" : "Password must contain at least one lowercase letter.";
        digitError.textContent = hasDigit ? "" : "Password must contain at least one digit.";
        specialCharError.textContent = hasSpecialChar ? "" : "Password must contain at least one special character.";
        lengthError.textContent = hasMinLength ? "" : "Password must be at least 6 characters.";

        // Enable/disable submit button based on validity
        const isValid = hasUppercase && hasLowercase && hasDigit && hasSpecialChar && hasMinLength;
        document.querySelector('button[type="submit"]').disabled = !isValid;
    }

    // Attach event listener to password input
    document.getElementById("inputPassword").addEventListener("input", validatePassword);

    // Run validation on form submission to ensure client-side checks are enforced
    document.querySelector('form').addEventListener('submit', function (event) {
        const password = document.getElementById("inputPassword").value;
        const hasUppercase = /[A-Z]/.test(password);
        const hasLowercase = /[a-z]/.test(password);
        const hasDigit = /\d/.test(password);
        const hasSpecialChar = /[^\da-zA-Z]/.test(password);
        const hasMinLength = password.length >= 6;

        if (!(hasUppercase && hasLowercase && hasDigit && hasSpecialChar && hasMinLength)) {
            event.preventDefault();
            validatePassword(); // Re-run validation to show errors
        }
    });



    // Image preview and delete functionality
    const fileInput = document.getElementById("file");
    const imagePreview = document.getElementById("imagePreview");
    const uploadLabel = document.getElementById("uploadLabel");
    const deleteImageButton = document.getElementById("deleteImage");

    fileInput.addEventListener("change", function () {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                imagePreview.src = e.target.result;
                imagePreview.style.display = "block";
                uploadLabel.style.display = "none";
                deleteImageButton.style.display = "block";
            };
            reader.readAsDataURL(file);
        }
    });

    deleteImageButton.addEventListener("click", function () {
        fileInput.value = "";
        imagePreview.src = "";
        imagePreview.style.display = "none";
        uploadLabel.style.display = "flex";
        deleteImageButton.style.display = "none";
    });
</script>