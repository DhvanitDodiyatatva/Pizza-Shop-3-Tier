@model PizzaShopRepository.ViewModels.MyProfile;

@{
    ViewData["Title"] = "My Profile";
}

<div class="Users-content mt-0 p-xl-5 p-lg-4 p-md-4 p-sm-4 p-4">
    <div class="d-flex align-items-center justify-content-between my-2 z-0">
        <div>
            <h2 class="fw-bolder fs-2 page-text me-2">My Profile</h2>
        </div>
    </div>

    <div class="content-div rounded-2 shadow p-3">
        <div class="card shadow-lg">
            <div class="profile-header"></div>
            <div class="card-body profile-container">
                <div class="mt-1 d-flex justify-content-between">
                    <div class="d-flex">
                        <img src="~/images/Default_pfp.svg.png" class="profile-pic" alt="Profile Picture">
                        <span>
                            <h5 class="mt-4 text-black fw-bolder">  @Model.FirstName @Model.LastName</h5>
                            <p class="fw-bold">@if (@Model.Role == "super_admin")
                                {
                                    <span>Admin</span>
                                }
                                                                else if (@Model.Role == "account_manager")
                                {
                                    <span>Account Manager</span>
                                }
                                else if (@Model.Role == "chef")
                                {
                                    <span>Chef</span>
                                }
                            </p>
                        </span>
                    </div>
                    <div>
                        <p class="mt-4">@Model.Email</p>
                    </div>
                </div>

                <form method="post" asp-controller="Home" asp-action="UpdateProfile">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="text" class="form-control floatingInput" id="firstName" name="FirstName"
                                    value="@Model.FirstName" placeholder="First Name" asp-for="FirstName">
                                <label for="firstName">First Name</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="lastName" name="LastName"
                                    placeholder="Last Name" value="@Model.LastName" asp-for="LastName">
                                <label for="lastName">Last Name</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="userName" name="Username"
                                    placeholder="User Name" value="@Model.Username" asp-for="Username">
                                <label for="userName">User Name</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="phone" name="Phone" placeholder="Phone"
                                    value="@Model.Phone" asp-for="Phone">
                                <label for="phone">Phone</label>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-floating">
                                <select class="form-select" id="selectCountry" name="Country" asp-for="Country">
                                    <option selected>Select Country</option>
                                </select>
                                <label for="country">Country</label>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-floating">
                                <select class="form-select" id="selectState" name="State" asp-for="State">
                                    <option selected>Select State</option>
                                </select>
                                <label for="state">State</label>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-floating">
                                <select class="form-select" id="selectCity" name="City" asp-for="City">
                                    <option selected>Select City</option>
                                </select>
                                <label for="city">City</label>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="address" name="Address"
                                    placeholder="Address" value="@Model.Address" asp-for="Address">
                                <label for="address">Address</label>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="zipcode" name="Zipcode"
                                    placeholder="Zipcode" value="@Model.Zipcode" asp-for="Zipcode">
                                <label for="zipcode">Zipcode</label>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end mt-4">
                        <button type="submit" class="btn btn-primary me-2">Update</button>
                        <a type="button" class="btn btn-secondary" asp-action="Dashboard"
                            asp-controller="Home">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let countryDropdown = document.getElementById("selectCountry");
        let stateDropdown = document.getElementById("selectState");
        let cityDropdown = document.getElementById("selectCity");

        let selectedCountry = "@Model.Country";
        let selectedState = "@Model.State";
        let selectedCity = "@Model.City";

        // Load Countries
        fetch("https://restcountries.com/v3.1/all")
            .then(response => response.json())
            .then(data => {
                data.forEach(country => {
                    let option = document.createElement("option");
                    option.value = country.name.common;
                    option.textContent = country.name.common;
                    if (country.name.common === selectedCountry) {
                        option.selected = true;
                    }
                    countryDropdown.appendChild(option);
                });

                if (selectedCountry) {
                    loadStates(selectedCountry);
                }
            })
            .catch(error => console.error("Error fetching countries:", error));

        // Load States based on Selected Country
        function loadStates(country) {
            fetch("https://countriesnow.space/api/v0.1/countries/states", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ country: country })
            })
                .then(response => response.json())
                .then(data => {
                    stateDropdown.innerHTML = '<option value="">Select State</option>';
                    data.data.states.forEach(state => {
                        let option = document.createElement("option");
                        option.value = state.name;
                        option.textContent = state.name;
                        if (state.name === selectedState) {
                            option.selected = true;
                        }
                        stateDropdown.appendChild(option);
                    });

                    if (selectedState) {
                        loadCities(selectedCountry, selectedState);
                    }
                })
                .catch(error => console.error("Error fetching states:", error));
        }

        // Load Cities based on Selected State
        function loadCities(country, state) {
            fetch("https://countriesnow.space/api/v0.1/countries/state/cities", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ country: country, state: state })
            })
                .then(response => response.json())
                .then(data => {
                    cityDropdown.innerHTML = '<option value="">Select City</option>';
                    data.data.forEach(city => {
                        let option = document.createElement("option");
                        option.value = city;
                        option.textContent = city;
                        if (city === selectedCity) {
                            option.selected = true;
                        }
                        cityDropdown.appendChild(option);
                    });
                })
                .catch(error => console.error("Error fetching cities:", error));
        }

        // Change events
        countryDropdown.addEventListener("change", function () {
            loadStates(this.value);
        });

        stateDropdown.addEventListener("change", function () {
            loadCities(countryDropdown.value, this.value);
        });
    });
</script>