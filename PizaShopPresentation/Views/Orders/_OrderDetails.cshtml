@model PizzaShopRepository.Models.Order

@{
    ViewData["Title"] = $"Order Details - #{Model.Id}";
}


<div class=" Users-content mt-0 p-xl-5 p-lg-4 p-md-4 p-sm-4 p-4 d-flex justify-content-center ">
    <div>
<div class="d-flex align-items-center justify-content-between my-2">
        <div>
            <div class="fw-bolder fs-2 page-text">Order-Details</div>
        </div>
        <div class="d-flex">
           <a href="@Url.Action("Index", "Orders")" class="btn btn-main text-white">Back</a>
          
        </div>
    </div>

<div class=" ">
    
    <!-- Back Button -->
    @* <div class="mb-3">
        <a href="@Url.Action("Index", "Orders")" class="btn btn-outline-secondary">Back</a>
    </div> *@

    <!-- Order Summary Section -->
    <div class="card mb-4">
        @* <div class="card-header d-flex justify-content-between align-items-center">
        
            <h5 class="mb-0 fw-bold fs-4">Order Summary <span class="badge bg-success-subtle">@Model.OrderStatus</span></h5>
            <a href="@Url.Action("ExportOrderDetails", "Orders", new { id = Model.Id })" class="btn btn-main text-white">
                <i class="bi bi-download"></i> Export
            </a>
            
        </div> *@
        <div class="card-body">
            <p><strong>Invoice No.:</strong> #@Model.InvoiceNo</p>
            
            <span><strong>Paid on:</strong> @Model.CreatedAt?.ToString("dd-MM-yyyy HH:mm")</span> &nbsp;&nbsp;&nbsp;
            <span><strong>Placed on:</strong> @Model.CreatedAt?.ToString("dd-MM-yyyy HH:mm")</span>&nbsp;&nbsp;&nbsp;
            <span><strong>Modified on:</strong> @Model.UpdatedAt?.ToString("dd-MM-yyyy HH:mm")</span>&nbsp;&nbsp;&nbsp;
            <span><strong>Duration:</strong>
                @{
                    var duration = Model.UpdatedAt.HasValue && Model.CreatedAt.HasValue
                    ? (Model.UpdatedAt.Value - Model.CreatedAt.Value).ToString(@"hh\:mm")
                    : "N/A";
                }
                @duration
            </span>
        </div>
    </div>

    <!-- Customer and Table Details Section -->
    <div class="row mb-4">
        <!-- Customer Details -->
        <div class="col-md-6 mb-2">
            <div class="card">
               
                <div class="card-body">
                     <h5 class="mb-0 fw-bold fs-4"><i class="bi bi-person-fill me-2 fw-bold fs-4"></i>Customer Details</h5><br>
                    <p class="mb-0"><strong>Name:</strong> @Model.Customer?.Name</p>
                    <p class="mb-0"><strong>Phone:</strong> @Model.Customer?.PhoneNo</p>
                    <p class="mb-0"><strong>No of Person:</strong> @Model.Customer?.NoOfPersons</p>
                    <p class="mb-0"><strong>Email:</strong> @Model.Customer?.Email</p>
                </div>
            </div>
        </div>

        <!-- Table Details -->
        <div class="col-md-6 mb-2">
            <div class="card h-100">
                <div class="card-body">
                     <h5 class="mb-0 fw-bold fs-4"><i class="bi bi-table me-2 fw-bold fs-4"></i>Table Details</h5>
                     <br>
                    @if (Model.OrderTables.Any())
                    {
                        foreach (var orderTable in Model.OrderTables)
                        {
                            <p class="mb-0"><strong>Table:</strong> @orderTable.Table?.Name</p>
                            <p class="mb-0"><strong>Section:</strong> @orderTable.Table?.Section?.Name</p>
                        }
                    }
                    else
                    {
                        <p>No table assigned</p>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Order Items Section -->
    <div class="  card">
        <div class="card-body table table-responsive">
            <h5 class="mb-0 fw-bold fs-4">Order Items</h5><br>
            <table class="table  table-hover">
                <thead>
                    <tr>
         <th>Sr.No</th>
                        <th>Item</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int srNo = 1;
                        decimal subtotal = 0;
                    }
                    @foreach (var item in Model.OrderItems)
                    {
                        <tr>
                            <td class="text-center">@srNo</td>
                            <td>
                                @item.Item?.Name
                                @if (item.OrderItemModifiers.Any())
                                {
                                    <ul class=" mt-1">
                                        @foreach (var modifier in item.OrderItemModifiers)
                                        {
                                            <li>  @modifier.Modifier?.Name</li>
                                        }
                                    </ul>
                                }
                            </td>
                            <td class="text-center">
                                @item.Quantity
                                @if (item.OrderItemModifiers.Any())
                                {
                                    <ul class="list-unstyled mt-1">
                                        @foreach (var modifier in item.OrderItemModifiers)
                                        {
                                            <li>  @modifier.Quantity</li>
                                        }
                                    </ul>
                                }
                            </td>
                            <td>
                                ₹ @item.UnitPrice.ToString("F2")
                                @if (item.OrderItemModifiers.Any())
                                {
                                    <ul class="list-unstyled mt-1">
                                        @foreach (var modifier in item.OrderItemModifiers)
                                        {
                                            <li>  ₹ @modifier.Price.ToString("F2")</li>
                                        }
                                    </ul>
                                }
                            </td>
                            <td>
                                ₹ @item.TotalPrice.ToString("F2")
                                @if (item.OrderItemModifiers.Any())
                                {
                                    <ul class="list-unstyled mt-1">
                                       
                                        @foreach (var modifier in item.OrderItemModifiers)
                                        {
                                            <li>  ₹ @(modifier.Price * modifier.Quantity)</li>
                                        }
                                    </ul>
                                }

                                @{
                                    decimal itemTotal = item.TotalPrice;
                                    decimal modifierTotal = item.OrderItemModifiers.Sum(m => m.Quantity * m.Price);
                                    decimal totalForRow = itemTotal + modifierTotal;
                                    subtotal += totalForRow;
                                }
                                @* ₹ @totalForRow.ToString("F2") *@
                            </td>
                        </tr>
                        srNo++;
                    }
                </tbody>
            </table>

            <!-- Tax and Total Summary -->
            <div class="text-end">
                <p><strong>Subtotal:</strong> ₹ @subtotal.ToString("F2")</p>
                @if (Model.OrderTaxes.Any())
                {
                    foreach (var tax in Model.OrderTaxes)
                    {
                        if (tax.TaxPercentage.HasValue && tax.TaxPercentage > 0)
                        {
                            <p><strong>@tax.Tax?.Name:</strong> ₹ @{
                                decimal taxAmount = subtotal * (tax.TaxPercentage.Value / 100);
                                @taxAmount.ToString("F2")
                            }
                            </p>
                    }
                                else if (tax.TaxFlat.HasValue && tax.TaxFlat > 0)
                    {
                        <p><strong>@tax.Tax?.Name:</strong> ₹ @tax.TaxFlat.Value.ToString("F2")</p>
                        }
                    }
                                    }
                    
                        <p><strong>Total:</strong> ₹ @Model.TotalAmount.ToString("F2")</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        border: none;
    }

    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }

    .badge {
        font-size: 0.9em;
    }

    .table th,
    .table td {
        vertical-align: middle;
    }

    .text-end {
        font-size: 1.1em;
    }
</style>